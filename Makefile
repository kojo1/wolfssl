# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

MAKE=make

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# All paths should be given relative to the root
#

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root

# vim:ft=automake
# included from Top Level Makefile.am
# All paths should be given relative to the root






pkgdatadir = $(datadir)/wolfssl
pkgincludedir = $(includedir)/wolfssl
pkglibdir = $(libdir)/wolfssl
pkglibexecdir = $(libexecdir)/wolfssl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-pc-linux-gnu
host_triplet = i486-pc-netbsd
bin_PROGRAMS =
noinst_PROGRAMS = $(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8) $(am__EXEEXT_2) \
	$(am__EXEEXT_9) $(am__EXEEXT_3)
check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3)
DIST_COMMON = README $(am__configure_deps) \
	$(am__dist_noinst_SCRIPTS_DIST) $(am__include_HEADERS_DIST) \
	$(am__nobase_include_HEADERS_DIST) $(am__noinst_HEADERS_DIST) \
	$(dist_doc_DATA) $(dist_example_DATA) \
	$(srcdir)/IDE/ARDUINO/include.am \
	$(srcdir)/IDE/ROWLEY-CROSSWORKS-ARM/include.am \
	$(srcdir)/IDE/WIN-SGX/include.am $(srcdir)/IDE/WIN/include.am \
	$(srcdir)/IDE/WORKBENCH/include.am \
	$(srcdir)/IDE/iOS/include.am $(srcdir)/IDE/include.am \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/certs/1024/include.am $(srcdir)/certs/crl/include.am \
	$(srcdir)/certs/external/include.am $(srcdir)/certs/include.am \
	$(srcdir)/certs/ocsp/include.am \
	$(srcdir)/certs/test-pathlen/include.am $(srcdir)/config.in \
	$(srcdir)/cyassl/ctaocrypt/include.am \
	$(srcdir)/cyassl/include.am \
	$(srcdir)/cyassl/openssl/include.am $(srcdir)/doc/include.am \
	$(srcdir)/examples/client/include.am \
	$(srcdir)/examples/echoclient/include.am \
	$(srcdir)/examples/echoserver/include.am \
	$(srcdir)/examples/include.am \
	$(srcdir)/examples/sctp/include.am \
	$(srcdir)/examples/server/include.am \
	$(srcdir)/mcapi/include.am \
	$(srcdir)/mcapi/wolfcrypt_mcapi.X/nbproject/include.am \
	$(srcdir)/mcapi/wolfcrypt_test.X/nbproject/include.am \
	$(srcdir)/mcapi/wolfssl.X/nbproject/include.am \
	$(srcdir)/mcapi/zlib.X/nbproject/include.am \
	$(srcdir)/mplabx/include.am \
	$(srcdir)/mplabx/wolfcrypt_benchmark.X/nbproject/include.am \
	$(srcdir)/mplabx/wolfcrypt_test.X/nbproject/include.am \
	$(srcdir)/mplabx/wolfssl.X/nbproject/include.am \
	$(srcdir)/mqx/util_lib/Sources/include.am \
	$(srcdir)/mqx/wolfcrypt_benchmark/Sources/include.am \
	$(srcdir)/mqx/wolfcrypt_test/Sources/include.am \
	$(srcdir)/mqx/wolfssl/include.am \
	$(srcdir)/mqx/wolfssl_client/Sources/include.am \
	$(srcdir)/rpm/include.am $(srcdir)/scripts/include.am \
	$(srcdir)/src/include.am \
	$(srcdir)/sslSniffer/sslSnifferTest/include.am \
	$(srcdir)/stamp-h.in $(srcdir)/support/include.am \
	$(srcdir)/swig/include.am $(srcdir)/tests/include.am \
	$(srcdir)/testsuite/include.am $(srcdir)/tirtos/include.am \
	$(srcdir)/wolfcrypt/benchmark/include.am \
	$(srcdir)/wolfcrypt/src/include.am \
	$(srcdir)/wolfcrypt/test/include.am \
	$(srcdir)/wolfcrypt/user-crypto/include.am \
	$(srcdir)/wolfssl/include.am \
	$(srcdir)/wolfssl/openssl/include.am \
	$(srcdir)/wolfssl/wolfcrypt/include.am \
	$(srcdir)/wrapper/include.am \
	$(srcdir)/wrapper/python/wolfcrypt/include.am \
	$(top_srcdir)/configure $(top_srcdir)/rpm/spec.in \
	$(top_srcdir)/support/wolfssl.pc.in \
	$(top_srcdir)/wolfssl/options.h.in \
	$(top_srcdir)/wolfssl/version.h.in AUTHORS COPYING ChangeLog \
	INSTALL NEWS build-aux/compile build-aux/config.guess \
	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
	build-aux/ltmain.sh build-aux/missing

# For distro build don't install options.h.
# It depends on the architecture and conflicts with Multi-Arch.
#am__append_1 = cyassl/options.h
am__append_2 = cyassl/options.h
#am__append_3 = wolfssl/wolfcrypt/port/cavium/cavium_nitrox.h

# For distro build don't install options.h.
# It depends on the architecture and conflicts with Multi-Arch.
#am__append_4 = wolfssl/options.h
am__append_5 = wolfssl/options.h

# install the packaged IPP libraries

# Link needed IPP libraries
#am__append_6 = IPP_links
#am__append_7 = $(IPPHEADERS) \
#	wolfcrypt/user-crypto/include/user_rsa.h

# fips first  file
#am__append_8 = ctaocrypt/src/wolfcrypt_first.c \
#	ctaocrypt/src/hmac.c ctaocrypt/src/random.c \
#	ctaocrypt/src/sha256.c
#am__append_9 = ctaocrypt/src/rsa.c
#am__append_10 = ctaocrypt/src/aes.c
#am__append_11 = ctaocrypt/src/des3.c
#am__append_12 = ctaocrypt/src/sha.c
#am__append_13 = ctaocrypt/src/sha512.c

# fips last file
#am__append_14 = ctaocrypt/src/fips.c \
#	ctaocrypt/src/fips_test.c \
#	ctaocrypt/src/wolfcrypt_last.c
am__append_15 = wolfcrypt/src/random.c
#am__append_16 = wolfcrypt/src/port/arm/armv8-sha256.c
am__append_17 = wolfcrypt/src/sha256.c
#am__append_18 = wolfcrypt/src/wolfevent.c
#am__append_19 = wolfcrypt/src/async.c
#am__append_20 = wolfcrypt/user-crypto/src/rsa.c
am__append_21 = wolfcrypt/src/rsa.c
#am__append_22 = wolfcrypt/src/port/arm/armv8-aes.c
am__append_23 = wolfcrypt/src/aes.c
#am__append_24 = wolfcrypt/src/cmac.c
am__append_25 = wolfcrypt/src/des3.c
am__append_26 = wolfcrypt/src/sha.c
am__append_27 = wolfcrypt/src/sha512.c
am__append_28 = wolfcrypt/src/memory.c
am__append_29 = wolfcrypt/src/dh.c
am__append_30 = wolfcrypt/src/asn.c
am__append_31 = wolfcrypt/src/coding.c
am__append_32 = wolfcrypt/src/poly1305.c
am__append_33 = wolfcrypt/src/arc4.c
am__append_34 = wolfcrypt/src/md4.c
am__append_35 = wolfcrypt/src/md5.c
am__append_36 = wolfcrypt/src/pwdbased.c \
	wolfcrypt/src/pkcs12.c
am__append_37 = wolfcrypt/src/dsa.c
#am__append_38 = wolfcrypt/src/aes_asm.s
#am__append_39 = wolfcrypt/src/camellia.c
am__append_40 = wolfcrypt/src/md2.c
#am__append_41 = wolfcrypt/src/ripemd.c
#am__append_42 = wolfcrypt/src/blake2b.c
#am__append_43 = wolfcrypt/src/hc128.c
#am__append_44 = wolfcrypt/src/rabbit.c
am__append_45 = wolfcrypt/src/chacha.c
am__append_46 = wolfcrypt/src/chacha20_poly1305.c
#am__append_47 = wolfcrypt/src/misc.c
#am__append_48 = wolfcrypt/src/tfm.c
am__append_49 = wolfcrypt/src/integer.c
am__append_50 = wolfcrypt/src/ecc.c
#am__append_51 = wolfcrypt/src/curve25519.c
#am__append_52 = wolfcrypt/src/ed25519.c
##am__append_53 = wolfcrypt/src/fe_low_mem.c
#am__append_54 = wolfcrypt/src/fe_operations.c
##am__append_55 = wolfcrypt/src/ge_low_mem.c
#am__append_56 = wolfcrypt/src/ge_operations.c
#am__append_57 = wolfcrypt/src/compress.c
am__append_58 = wolfcrypt/src/pkcs7.c
#am__append_59 = wolfcrypt/src/srp.c
#am__append_60 = wolfcrypt/src/idea.c

# ssl files
am__append_61 = \
               src/internal.c \
               src/io.c \
               src/keys.c \
               src/ssl.c \
               src/tls.c

am__append_62 = src/ocsp.c
am__append_63 = src/crl.c
#am__append_64 = src/sniffer.c
am__append_65 =  \
	wolfcrypt/benchmark/benchmark \
	wolfcrypt/test/testwolfcrypt \
	wolfcrypt/test/testwolfcrypt
am__append_66 =  \
	wolfcrypt/benchmark/benchmark.h \
	wolfcrypt/test/test.h
#am__append_67 = wolfcrypt/src/port/cavium/cavium_nitrox.c
#am__append_68 = wolfcrypt/src/port/cavium/README.md
#am__append_69 = wolfcrypt/test/testwolfcrypt
am__append_70 = examples/client/client \
	examples/echoclient/echoclient
am__append_71 = examples/client/client.h \
	examples/echoclient/echoclient.h
am__append_72 =  \
	examples/echoserver/echoserver \
	examples/server/server
am__append_73 =  \
	examples/echoserver/echoserver.h \
	examples/server/server.h
#am__append_74 = \
#				examples/sctp/sctp-server \
#				examples/sctp/sctp-server-dtls

#am__append_75 = \
#				examples/sctp/sctp-client \
#				examples/sctp/sctp-client-dtls

am__append_76 = testsuite/testsuite.test \
	tests/unit.test
am__append_77 = testsuite/testsuite.test \
	tests/unit.test
#am__append_78 = sslSniffer/sslSnifferTest/snifftest
am__append_79 = mqx/util_lib/.cproject \
	mqx/util_lib/.project \
	mqx/util_lib/Sources/util.c \
	mqx/util_lib/Sources/util.h \
	mqx/wolfcrypt_benchmark/.cproject \
	mqx/wolfcrypt_benchmark/.project \
	mqx/wolfcrypt_benchmark/Debugger/K70FN1M0.mem \
	mqx/wolfcrypt_benchmark/Debugger/init_kinetis.tcl \
	mqx/wolfcrypt_benchmark/Debugger/mass_erase_kinetis.tcl \
	mqx/wolfcrypt_benchmark/ReferencedRSESystems.xml \
	mqx/wolfcrypt_benchmark/wolfcrypt_benchmark_twrk70f120m_Int_Flash_DDRData_Debug_PnE_U-MultiLink.launch \
	mqx/wolfcrypt_benchmark/wolfcrypt_benchmark_twrk70f120m_Int_Flash_DDRData_Release_PnE_U-MultiLink.launch \
	mqx/wolfcrypt_benchmark/wolfcrypt_benchmark_twrk70f120m_Int_Flash_SramData_Debug_JTrace.jlink \
	mqx/wolfcrypt_benchmark/wolfcrypt_benchmark_twrk70f120m_Int_Flash_SramData_Debug_JTrace.launch \
	mqx/wolfcrypt_benchmark/wolfcrypt_benchmark_twrk70f120m_Int_Flash_SramData_Debug_PnE_U-MultiLink.launch \
	mqx/wolfcrypt_benchmark/wolfcrypt_benchmark_twrk70f120m_Int_Flash_SramData_Release_PnE_U-MultiLink.launch \
	mqx/wolfcrypt_benchmark/Sources/main.c \
	mqx/wolfcrypt_benchmark/Sources/main.h \
	mqx/wolfcrypt_test/.cproject \
	mqx/wolfcrypt_test/.project \
	mqx/wolfcrypt_test/Debugger/K70FN1M0.mem \
	mqx/wolfcrypt_test/Debugger/init_kinetis.tcl \
	mqx/wolfcrypt_test/Debugger/mass_erase_kinetis.tcl \
	mqx/wolfcrypt_test/ReferencedRSESystems.xml \
	mqx/wolfcrypt_test/wolfcrypt_test_twrk70f120m_Int_Flash_DDRData_Debug_PnE_U-MultiLink.launch \
	mqx/wolfcrypt_test/wolfcrypt_test_twrk70f120m_Int_Flash_DDRData_Release_PnE_U-MultiLink.launch \
	mqx/wolfcrypt_test/wolfcrypt_test_twrk70f120m_Int_Flash_SramData_Debug_JTrace.jlink \
	mqx/wolfcrypt_test/wolfcrypt_test_twrk70f120m_Int_Flash_SramData_Debug_JTrace.launch \
	mqx/wolfcrypt_test/wolfcrypt_test_twrk70f120m_Int_Flash_SramData_Debug_PnE_U-MultiLink.launch \
	mqx/wolfcrypt_test/wolfcrypt_test_twrk70f120m_Int_Flash_SramData_Release_PnE_U-MultiLink.launch \
	mqx/wolfcrypt_test/Sources/main.c \
	mqx/wolfcrypt_test/Sources/main.h \
	mqx/README mqx/wolfssl/.cproject \
	mqx/wolfssl/.project \
	mqx/wolfssl_client/.cproject \
	mqx/wolfssl_client/.project \
	mqx/wolfssl_client/Debugger/K70FN1M0.mem \
	mqx/wolfssl_client/Debugger/init_kinetis.tcl \
	mqx/wolfssl_client/Debugger/mass_erase_kinetis.tcl \
	mqx/wolfssl_client/ReferencedRSESystems.xml \
	mqx/wolfssl_client/wolfssl_client_twrk70f120m_Int_Flash_DDRData_Debug_PnE_U-MultiLink.launch \
	mqx/wolfssl_client/wolfssl_client_twrk70f120m_Int_Flash_DDRData_Release_PnE_U-MultiLink.launch \
	mqx/wolfssl_client/wolfssl_client_twrk70f120m_Int_Flash_SramData_Debug_JTrace.jlink \
	mqx/wolfssl_client/wolfssl_client_twrk70f120m_Int_Flash_SramData_Debug_JTrace.launch \
	mqx/wolfssl_client/wolfssl_client_twrk70f120m_Int_Flash_SramData_Debug_PnE_U-MultiLink.launch \
	mqx/wolfssl_client/wolfssl_client_twrk70f120m_Int_Flash_SramData_Release_PnE_U-MultiLink.launch \
	mqx/wolfssl_client/Sources/main.c \
	mqx/wolfssl_client/Sources/main.h \
	mplabx/PIC32MZ-serial.h mplabx/README \
	mplabx/benchmark_main.c mplabx/test_main.c \
	mplabx/wolfcrypt_benchmark.X/Makefile \
	mplabx/wolfcrypt_benchmark.X/nbproject/configurations.xml \
	mplabx/wolfcrypt_benchmark.X/nbproject/project.xml \
	mplabx/wolfcrypt_test.X/Makefile \
	mplabx/wolfcrypt_test.X/nbproject/configurations.xml \
	mplabx/wolfcrypt_test.X/nbproject/project.xml \
	mplabx/wolfssl.X/Makefile \
	mplabx/wolfssl.X/nbproject/configurations.xml \
	mplabx/wolfssl.X/nbproject/project.xml \
	mcapi/README mcapi/PIC32MZ-serial.h \
	mcapi/wolfcrypt_mcapi.X/Makefile \
	mcapi/wolfcrypt_mcapi.X/nbproject/configurations.xml \
	mcapi/wolfcrypt_mcapi.X/nbproject/project.xml \
	mcapi/wolfcrypt_test.X/Makefile \
	mcapi/wolfcrypt_test.X/nbproject/configurations.xml \
	mcapi/wolfcrypt_test.X/nbproject/project.xml \
	mcapi/wolfssl.X/Makefile \
	mcapi/wolfssl.X/nbproject/configurations.xml \
	mcapi/wolfssl.X/nbproject/project.xml \
	mcapi/zlib.X/Makefile \
	mcapi/zlib.X/nbproject/configurations.xml \
	mcapi/zlib.X/nbproject/project.xml \
	tirtos/README tirtos/wolfssl.bld \
	tirtos/wolfssl.mak tirtos/products.mak \
	tirtos/packages/ti/net/wolfssl/package.bld \
	tirtos/packages/ti/net/wolfssl/package.xdc \
	tirtos/packages/ti/net/wolfssl/package.xs \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/test/package.bld.hide \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/test/package.xdc \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/test/test.cfg \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/test/TM4C1294NC.icf \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/test/main.c \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/benchmark/package.bld.hide \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/benchmark/package.xdc \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/benchmark/benchmark.cfg \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/benchmark/TM4C1294NC.icf \
	tirtos/packages/ti/net/wolfssl/tests/EK_TM4C1294XL/wolfcrypt/benchmark/main.c \
	IDE/iOS/README.md \
	IDE/iOS/wolfssl-FIPS.xcodeproj/project.pbxproj \
	IDE/iOS/wolfssl.xcodeproj/project.pbxproj \
	IDE/iOS/wolfssl.xcworkspace \
	IDE/iOS/wolfssl_testsuite.xcodeproj \
	IDE/iOS/user_settings.h IDE/WIN/README.txt \
	IDE/WIN/test.vcxproj \
	IDE/WIN/wolfssl-fips.sln \
	IDE/WIN/wolfssl-fips.vcxproj \
	IDE/WIN/user_settings.h \
	IDE/WIN-SGX/ReadMe.txt \
	IDE/WIN-SGX/wolfSSL_SGX.edl \
	IDE/WIN-SGX/wolfSSL_SGX.sln \
	IDE/WIN-SGX/wolfSSL_SGX.vcxproj \
	IDE/WIN-SGX/wolfSSL_SGX.vcxproj.filters \
	IDE/WORKBENCH/README.md \
	IDE/ROWLEY-CROSSWORKS-ARM/arm_startup.c \
	IDE/ROWLEY-CROSSWORKS-ARM/benchmark_main.c \
	IDE/ROWLEY-CROSSWORKS-ARM/hw.h \
	IDE/ROWLEY-CROSSWORKS-ARM/kinetis_hw.c \
	IDE/ROWLEY-CROSSWORKS-ARM/Kinetis_FlashPlacement.xml \
	IDE/ROWLEY-CROSSWORKS-ARM/README.md \
	IDE/ROWLEY-CROSSWORKS-ARM/test_main.c \
	IDE/ROWLEY-CROSSWORKS-ARM/retarget.c \
	IDE/ROWLEY-CROSSWORKS-ARM/user_settings.h \
	IDE/ROWLEY-CROSSWORKS-ARM/wolfssl.hzp \
	IDE/ROWLEY-CROSSWORKS-ARM/wolfssl_ltc.hzp \
	IDE/ARDUINO/README.md \
	IDE/ARDUINO/sketches/wolfssl_client/wolfssl_client.ino \
	IDE/ARDUINO/wolfssl-arduino.sh \
	IDE/IAR-EWARM IDE/MDK-ARM IDE/MDK5-ARM \
	IDE/MYSQL IDE/LPCXPRESSO
#am__append_80 = mcapi/test
#am__append_81 = mcapi/test 
am__append_82 = mcapi/crypto.h
#am__append_83 = scripts/sniffer-testsuite.test
am__append_84 = scripts/resume.test
am__append_85 = scripts/benchmark.test

# make revoked test rely on completion of resume test
am__append_86 = scripts/crl-revoked.test
am__append_87 = scripts/ocsp.test
#am__append_88 = scripts/ocsp-stapling.test
#am__append_89 = scripts/ocsp-stapling2.test
am__append_90 = scripts/psk.test
#am__append_91 = scripts/trusted_peer.test
#am__append_92 = scripts/pkcallbacks.test
am__append_93 = scripts/external.test \
	scripts/google.test \
	scripts/openssl.test
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_add_am_macro.m4 \
	$(top_srcdir)/m4/ax_am_jobserver.m4 \
	$(top_srcdir)/m4/ax_am_macros.m4 \
	$(top_srcdir)/m4/ax_append_compile_flags.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_append_to_file.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_count_cpus.m4 \
	$(top_srcdir)/m4/ax_create_generic_config.m4 \
	$(top_srcdir)/m4/ax_debug.m4 \
	$(top_srcdir)/m4/ax_file_escapes.m4 \
	$(top_srcdir)/m4/ax_harden_compiler_flags.m4 \
	$(top_srcdir)/m4/ax_print_to_file.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/ax_tls.m4 \
	$(top_srcdir)/m4/ax_vcs_checkout.m4 \
	$(top_srcdir)/m4/hexversion.m4 \
	$(top_srcdir)/m4/lib_socket_nsl.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/visibility.m4 \
	$(top_srcdir)/m4/wolfssl_darwin_clang.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = stamp-h wolfssl/version.h wolfssl/options.h \
	support/wolfssl.pc rpm/spec
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(docdir)" "$(DESTDIR)$(exampledir)" \
	"$(DESTDIR)$(ippdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
src_libwolfssl_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__src_libwolfssl_la_SOURCES_DIST = ctaocrypt/src/wolfcrypt_first.c \
	ctaocrypt/src/hmac.c ctaocrypt/src/random.c \
	ctaocrypt/src/sha256.c ctaocrypt/src/rsa.c ctaocrypt/src/aes.c \
	ctaocrypt/src/des3.c ctaocrypt/src/sha.c \
	ctaocrypt/src/sha512.c ctaocrypt/src/fips.c \
	ctaocrypt/src/fips_test.c ctaocrypt/src/wolfcrypt_last.c \
	wolfcrypt/src/hmac.c wolfcrypt/src/hash.c \
	wolfcrypt/src/random.c wolfcrypt/src/port/arm/armv8-sha256.c \
	wolfcrypt/src/sha256.c wolfcrypt/src/wolfevent.c \
	wolfcrypt/src/async.c wolfcrypt/user-crypto/src/rsa.c \
	wolfcrypt/src/rsa.c wolfcrypt/src/port/arm/armv8-aes.c \
	wolfcrypt/src/aes.c wolfcrypt/src/cmac.c wolfcrypt/src/des3.c \
	wolfcrypt/src/sha.c wolfcrypt/src/sha512.c \
	wolfcrypt/src/logging.c wolfcrypt/src/wc_encrypt.c \
	wolfcrypt/src/wc_port.c wolfcrypt/src/error.c \
	wolfcrypt/src/signature.c wolfcrypt/src/wolfmath.c \
	wolfcrypt/src/memory.c wolfcrypt/src/dh.c wolfcrypt/src/asn.c \
	wolfcrypt/src/coding.c wolfcrypt/src/poly1305.c \
	wolfcrypt/src/arc4.c wolfcrypt/src/md4.c wolfcrypt/src/md5.c \
	wolfcrypt/src/pwdbased.c wolfcrypt/src/pkcs12.c \
	wolfcrypt/src/dsa.c wolfcrypt/src/aes_asm.s \
	wolfcrypt/src/camellia.c wolfcrypt/src/md2.c \
	wolfcrypt/src/ripemd.c wolfcrypt/src/blake2b.c \
	wolfcrypt/src/hc128.c wolfcrypt/src/rabbit.c \
	wolfcrypt/src/chacha.c wolfcrypt/src/chacha20_poly1305.c \
	wolfcrypt/src/misc.c wolfcrypt/src/tfm.c \
	wolfcrypt/src/integer.c wolfcrypt/src/ecc.c \
	wolfcrypt/src/curve25519.c wolfcrypt/src/ed25519.c \
	wolfcrypt/src/fe_low_mem.c wolfcrypt/src/fe_operations.c \
	wolfcrypt/src/ge_low_mem.c wolfcrypt/src/ge_operations.c \
	wolfcrypt/src/compress.c wolfcrypt/src/pkcs7.c \
	wolfcrypt/src/srp.c wolfcrypt/src/idea.c src/internal.c \
	src/io.c src/keys.c src/ssl.c src/tls.c src/ocsp.c src/crl.c \
	src/sniffer.c wolfcrypt/src/port/cavium/cavium_nitrox.c
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.lo \
#	ctaocrypt/src/src_libwolfssl_la-hmac.lo \
#	ctaocrypt/src/src_libwolfssl_la-random.lo \
#	ctaocrypt/src/src_libwolfssl_la-sha256.lo
#am__objects_2 = ctaocrypt/src/src_libwolfssl_la-rsa.lo
#am__objects_3 = ctaocrypt/src/src_libwolfssl_la-aes.lo
#am__objects_4 = ctaocrypt/src/src_libwolfssl_la-des3.lo
#am__objects_5 = ctaocrypt/src/src_libwolfssl_la-sha.lo
#am__objects_6 = ctaocrypt/src/src_libwolfssl_la-sha512.lo
#am__objects_7 =  \
#	ctaocrypt/src/src_libwolfssl_la-fips.lo \
#	ctaocrypt/src/src_libwolfssl_la-fips_test.lo \
#	ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.lo
am__objects_8 =  \
	wolfcrypt/src/src_libwolfssl_la-random.lo
#am__objects_9 = wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.lo
am__objects_10 =  \
	wolfcrypt/src/src_libwolfssl_la-sha256.lo
#am__objects_11 = wolfcrypt/src/src_libwolfssl_la-wolfevent.lo
#am__objects_12 = wolfcrypt/src/src_libwolfssl_la-async.lo
#am__objects_13 = wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.lo
am__objects_14 = wolfcrypt/src/src_libwolfssl_la-rsa.lo
#am__objects_15 = wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.lo
am__objects_16 = wolfcrypt/src/src_libwolfssl_la-aes.lo
#am__objects_17 =  \
#	wolfcrypt/src/src_libwolfssl_la-cmac.lo
am__objects_18 =  \
	wolfcrypt/src/src_libwolfssl_la-des3.lo
am__objects_19 =  \
	wolfcrypt/src/src_libwolfssl_la-sha.lo
am__objects_20 =  \
	wolfcrypt/src/src_libwolfssl_la-sha512.lo
am__objects_21 =  \
	wolfcrypt/src/src_libwolfssl_la-memory.lo
am__objects_22 = wolfcrypt/src/src_libwolfssl_la-dh.lo
am__objects_23 =  \
	wolfcrypt/src/src_libwolfssl_la-asn.lo
am__objects_24 =  \
	wolfcrypt/src/src_libwolfssl_la-coding.lo
am__objects_25 = wolfcrypt/src/src_libwolfssl_la-poly1305.lo
am__objects_26 =  \
	wolfcrypt/src/src_libwolfssl_la-arc4.lo
am__objects_27 =  \
	wolfcrypt/src/src_libwolfssl_la-md4.lo
am__objects_28 =  \
	wolfcrypt/src/src_libwolfssl_la-md5.lo
am__objects_29 = wolfcrypt/src/src_libwolfssl_la-pwdbased.lo \
	wolfcrypt/src/src_libwolfssl_la-pkcs12.lo
am__objects_30 =  \
	wolfcrypt/src/src_libwolfssl_la-dsa.lo
#am__objects_31 = wolfcrypt/src/aes_asm.lo
#am__objects_32 = wolfcrypt/src/src_libwolfssl_la-camellia.lo
am__objects_33 =  \
	wolfcrypt/src/src_libwolfssl_la-md2.lo
#am__objects_34 =  \
#	wolfcrypt/src/src_libwolfssl_la-ripemd.lo
#am__objects_35 =  \
#	wolfcrypt/src/src_libwolfssl_la-blake2b.lo
#am__objects_36 =  \
#	wolfcrypt/src/src_libwolfssl_la-hc128.lo
#am__objects_37 =  \
#	wolfcrypt/src/src_libwolfssl_la-rabbit.lo
am__objects_38 =  \
	wolfcrypt/src/src_libwolfssl_la-chacha.lo
am__objects_39 = wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.lo
#am__objects_40 =  \
#	wolfcrypt/src/src_libwolfssl_la-misc.lo
#am__objects_41 =  \
#	wolfcrypt/src/src_libwolfssl_la-tfm.lo
am__objects_42 = wolfcrypt/src/src_libwolfssl_la-integer.lo
am__objects_43 =  \
	wolfcrypt/src/src_libwolfssl_la-ecc.lo
#am__objects_44 = wolfcrypt/src/src_libwolfssl_la-curve25519.lo
#am__objects_45 = wolfcrypt/src/src_libwolfssl_la-ed25519.lo
##am__objects_46 = wolfcrypt/src/src_libwolfssl_la-fe_low_mem.lo
#am__objects_47 = wolfcrypt/src/src_libwolfssl_la-fe_operations.lo
##am__objects_48 = wolfcrypt/src/src_libwolfssl_la-ge_low_mem.lo
#am__objects_49 = wolfcrypt/src/src_libwolfssl_la-ge_operations.lo
#am__objects_50 =  \
#	wolfcrypt/src/src_libwolfssl_la-compress.lo
am__objects_51 =  \
	wolfcrypt/src/src_libwolfssl_la-pkcs7.lo
#am__objects_52 =  \
#	wolfcrypt/src/src_libwolfssl_la-srp.lo
#am__objects_53 =  \
#	wolfcrypt/src/src_libwolfssl_la-idea.lo
am__objects_54 =  \
	src/src_libwolfssl_la-internal.lo \
	src/src_libwolfssl_la-io.lo \
	src/src_libwolfssl_la-keys.lo \
	src/src_libwolfssl_la-ssl.lo \
	src/src_libwolfssl_la-tls.lo
am__objects_55 = src/src_libwolfssl_la-ocsp.lo
am__objects_56 = src/src_libwolfssl_la-crl.lo
#am__objects_57 = src/src_libwolfssl_la-sniffer.lo
#am__objects_58 = wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.lo
am_src_libwolfssl_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7) \
	wolfcrypt/src/src_libwolfssl_la-hmac.lo \
	wolfcrypt/src/src_libwolfssl_la-hash.lo $(am__objects_8) \
	$(am__objects_9) $(am__objects_10) $(am__objects_11) \
	$(am__objects_12) $(am__objects_13) $(am__objects_14) \
	$(am__objects_15) $(am__objects_16) $(am__objects_17) \
	$(am__objects_18) $(am__objects_19) $(am__objects_20) \
	wolfcrypt/src/src_libwolfssl_la-logging.lo \
	wolfcrypt/src/src_libwolfssl_la-wc_encrypt.lo \
	wolfcrypt/src/src_libwolfssl_la-wc_port.lo \
	wolfcrypt/src/src_libwolfssl_la-error.lo \
	wolfcrypt/src/src_libwolfssl_la-signature.lo \
	wolfcrypt/src/src_libwolfssl_la-wolfmath.lo $(am__objects_21) \
	$(am__objects_22) $(am__objects_23) $(am__objects_24) \
	$(am__objects_25) $(am__objects_26) $(am__objects_27) \
	$(am__objects_28) $(am__objects_29) $(am__objects_30) \
	$(am__objects_31) $(am__objects_32) $(am__objects_33) \
	$(am__objects_34) $(am__objects_35) $(am__objects_36) \
	$(am__objects_37) $(am__objects_38) $(am__objects_39) \
	$(am__objects_40) $(am__objects_41) $(am__objects_42) \
	$(am__objects_43) $(am__objects_44) $(am__objects_45) \
	$(am__objects_46) $(am__objects_47) $(am__objects_48) \
	$(am__objects_49) $(am__objects_50) $(am__objects_51) \
	$(am__objects_52) $(am__objects_53) $(am__objects_54) \
	$(am__objects_55) $(am__objects_56) $(am__objects_57) \
	$(am__objects_58)
src_libwolfssl_la_OBJECTS = $(am_src_libwolfssl_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
src_libwolfssl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(src_libwolfssl_la_CFLAGS) $(CFLAGS) \
	$(src_libwolfssl_la_LDFLAGS) $(LDFLAGS) -o $@
#am__EXEEXT_1 = wolfcrypt/test/testwolfcrypt$(EXEEXT)
am__EXEEXT_2 = testsuite/testsuite.test$(EXEEXT) \
	tests/unit.test$(EXEEXT)
#am__EXEEXT_3 =  \
#	mcapi/test$(EXEEXT)
am__EXEEXT_4 = wolfcrypt/benchmark/benchmark$(EXEEXT) \
	wolfcrypt/test/testwolfcrypt$(EXEEXT) \
	wolfcrypt/test/testwolfcrypt$(EXEEXT)
am__EXEEXT_5 =  \
	examples/client/client$(EXEEXT) \
	examples/echoclient/echoclient$(EXEEXT)
am__EXEEXT_6 = examples/echoserver/echoserver$(EXEEXT) \
	examples/server/server$(EXEEXT)
#am__EXEEXT_7 = examples/sctp/sctp-server$(EXEEXT) \
#	examples/sctp/sctp-server-dtls$(EXEEXT)
#am__EXEEXT_8 = examples/sctp/sctp-client$(EXEEXT) \
#	examples/sctp/sctp-client-dtls$(EXEEXT)
#am__EXEEXT_9 = sslSniffer/sslSnifferTest/snifftest$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__examples_client_client_SOURCES_DIST = examples/client/client.c
am_examples_client_client_OBJECTS =  \
	examples/client/client.$(OBJEXT)
examples_client_client_OBJECTS = $(am_examples_client_client_OBJECTS)
am__examples_echoclient_echoclient_SOURCES_DIST =  \
	examples/echoclient/echoclient.c
am_examples_echoclient_echoclient_OBJECTS = examples/echoclient/echoclient.$(OBJEXT)
examples_echoclient_echoclient_OBJECTS =  \
	$(am_examples_echoclient_echoclient_OBJECTS)
am__examples_echoserver_echoserver_SOURCES_DIST =  \
	examples/echoserver/echoserver.c
am_examples_echoserver_echoserver_OBJECTS = examples/echoserver/echoserver.$(OBJEXT)
examples_echoserver_echoserver_OBJECTS =  \
	$(am_examples_echoserver_echoserver_OBJECTS)
am__examples_sctp_sctp_client_SOURCES_DIST =  \
	examples/sctp/sctp-client.c
#am_examples_sctp_sctp_client_OBJECTS = examples/sctp/sctp-client.$(OBJEXT)
examples_sctp_sctp_client_OBJECTS =  \
	$(am_examples_sctp_sctp_client_OBJECTS)
#examples_sctp_sctp_client_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__examples_sctp_sctp_client_dtls_SOURCES_DIST =  \
	examples/sctp/sctp-client-dtls.c
#am_examples_sctp_sctp_client_dtls_OBJECTS = examples/sctp/sctp-client-dtls.$(OBJEXT)
examples_sctp_sctp_client_dtls_OBJECTS =  \
	$(am_examples_sctp_sctp_client_dtls_OBJECTS)
am__examples_sctp_sctp_server_SOURCES_DIST =  \
	examples/sctp/sctp-server.c
#am_examples_sctp_sctp_server_OBJECTS = examples/sctp/sctp-server.$(OBJEXT)
examples_sctp_sctp_server_OBJECTS =  \
	$(am_examples_sctp_sctp_server_OBJECTS)
#examples_sctp_sctp_server_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__examples_sctp_sctp_server_dtls_SOURCES_DIST =  \
	examples/sctp/sctp-server-dtls.c
#am_examples_sctp_sctp_server_dtls_OBJECTS = examples/sctp/sctp-server-dtls.$(OBJEXT)
examples_sctp_sctp_server_dtls_OBJECTS =  \
	$(am_examples_sctp_sctp_server_dtls_OBJECTS)
am__examples_server_server_SOURCES_DIST = examples/server/server.c
am_examples_server_server_OBJECTS =  \
	examples/server/server.$(OBJEXT)
examples_server_server_OBJECTS = $(am_examples_server_server_OBJECTS)
am__mcapi_test_SOURCES_DIST = mcapi/crypto.c mcapi/mcapi_test.c
#am_mcapi_test_OBJECTS =  \
#	mcapi/crypto.$(OBJEXT) \
#	mcapi/mcapi_test.$(OBJEXT)
mcapi_test_OBJECTS = $(am_mcapi_test_OBJECTS)
am__sslSniffer_sslSnifferTest_snifftest_SOURCES_DIST =  \
	sslSniffer/sslSnifferTest/snifftest.c
#am_sslSniffer_sslSnifferTest_snifftest_OBJECTS = sslSniffer/sslSnifferTest/snifftest.$(OBJEXT)
sslSniffer_sslSnifferTest_snifftest_OBJECTS =  \
	$(am_sslSniffer_sslSnifferTest_snifftest_OBJECTS)
am__tests_unit_test_SOURCES_DIST = tests/unit.c tests/api.c \
	tests/suites.c tests/hash.c tests/srp.c \
	examples/client/client.c examples/server/server.c
am_tests_unit_test_OBJECTS =  \
	tests/tests_unit_test-unit.$(OBJEXT) \
	tests/tests_unit_test-api.$(OBJEXT) \
	tests/tests_unit_test-suites.$(OBJEXT) \
	tests/tests_unit_test-hash.$(OBJEXT) \
	tests/tests_unit_test-srp.$(OBJEXT) \
	examples/client/tests_unit_test-client.$(OBJEXT) \
	examples/server/tests_unit_test-server.$(OBJEXT)
tests_unit_test_OBJECTS = $(am_tests_unit_test_OBJECTS)
tests_unit_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_unit_test_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__testsuite_testsuite_test_SOURCES_DIST = wolfcrypt/test/test.c \
	examples/client/client.c examples/echoclient/echoclient.c \
	examples/echoserver/echoserver.c examples/server/server.c \
	testsuite/testsuite.c
am_testsuite_testsuite_test_OBJECTS = wolfcrypt/test/testsuite_testsuite_test-test.$(OBJEXT) \
	examples/client/testsuite_testsuite_test-client.$(OBJEXT) \
	examples/echoclient/testsuite_testsuite_test-echoclient.$(OBJEXT) \
	examples/echoserver/testsuite_testsuite_test-echoserver.$(OBJEXT) \
	examples/server/testsuite_testsuite_test-server.$(OBJEXT) \
	testsuite/testsuite_testsuite_test-testsuite.$(OBJEXT)
testsuite_testsuite_test_OBJECTS =  \
	$(am_testsuite_testsuite_test_OBJECTS)
testsuite_testsuite_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(testsuite_testsuite_test_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__wolfcrypt_benchmark_benchmark_SOURCES_DIST =  \
	wolfcrypt/benchmark/benchmark.c
am_wolfcrypt_benchmark_benchmark_OBJECTS = wolfcrypt/benchmark/benchmark.$(OBJEXT)
wolfcrypt_benchmark_benchmark_OBJECTS =  \
	$(am_wolfcrypt_benchmark_benchmark_OBJECTS)
am__wolfcrypt_test_testwolfcrypt_SOURCES_DIST = wolfcrypt/test/test.c
am_wolfcrypt_test_testwolfcrypt_OBJECTS =  \
	wolfcrypt/test/test.$(OBJEXT)
wolfcrypt_test_testwolfcrypt_OBJECTS =  \
	$(am_wolfcrypt_test_testwolfcrypt_OBJECTS)
am__dist_noinst_SCRIPTS_DIST = scripts/sniffer-testsuite.test \
	scripts/resume.test scripts/crl-revoked.test scripts/ocsp.test \
	scripts/ocsp-stapling.test scripts/ocsp-stapling2.test \
	scripts/psk.test scripts/trusted_peer.test \
	scripts/pkcallbacks.test scripts/external.test \
	scripts/google.test scripts/openssl.test
SCRIPTS = $(dist_noinst_SCRIPTS) $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(AM_CCASFLAGS) \
	$(CCASFLAGS)
AM_V_CCAS = $(am__v_CCAS_$(V))
am__v_CCAS_ = $(am__v_CCAS_$(AM_DEFAULT_VERBOSITY))
am__v_CCAS_0 = @echo "  CCAS  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(src_libwolfssl_la_SOURCES) \
	$(examples_client_client_SOURCES) \
	$(examples_echoclient_echoclient_SOURCES) \
	$(examples_echoserver_echoserver_SOURCES) \
	$(examples_sctp_sctp_client_SOURCES) \
	$(examples_sctp_sctp_client_dtls_SOURCES) \
	$(examples_sctp_sctp_server_SOURCES) \
	$(examples_sctp_sctp_server_dtls_SOURCES) \
	$(examples_server_server_SOURCES) $(mcapi_test_SOURCES) \
	$(sslSniffer_sslSnifferTest_snifftest_SOURCES) \
	$(tests_unit_test_SOURCES) $(testsuite_testsuite_test_SOURCES) \
	$(wolfcrypt_benchmark_benchmark_SOURCES) \
	$(wolfcrypt_test_testwolfcrypt_SOURCES)
DIST_SOURCES = $(am__src_libwolfssl_la_SOURCES_DIST) \
	$(am__examples_client_client_SOURCES_DIST) \
	$(am__examples_echoclient_echoclient_SOURCES_DIST) \
	$(am__examples_echoserver_echoserver_SOURCES_DIST) \
	$(am__examples_sctp_sctp_client_SOURCES_DIST) \
	$(am__examples_sctp_sctp_client_dtls_SOURCES_DIST) \
	$(am__examples_sctp_sctp_server_SOURCES_DIST) \
	$(am__examples_sctp_sctp_server_dtls_SOURCES_DIST) \
	$(am__examples_server_server_SOURCES_DIST) \
	$(am__mcapi_test_SOURCES_DIST) \
	$(am__sslSniffer_sslSnifferTest_snifftest_SOURCES_DIST) \
	$(am__tests_unit_test_SOURCES_DIST) \
	$(am__testsuite_testsuite_test_SOURCES_DIST) \
	$(am__wolfcrypt_benchmark_benchmark_SOURCES_DIST) \
	$(am__wolfcrypt_test_testwolfcrypt_SOURCES_DIST)
DATA = $(dist_doc_DATA) $(dist_example_DATA) $(ipp_DATA) \
	$(pkgconfig_DATA)
am__include_HEADERS_DIST =  \
	wolfcrypt/user-crypto/include/user_rsa.h
am__nobase_include_HEADERS_DIST = cyassl/ctaocrypt/aes.h \
	cyassl/ctaocrypt/arc4.h cyassl/ctaocrypt/asn.h \
	cyassl/ctaocrypt/asn_public.h cyassl/ctaocrypt/poly1305.h \
	cyassl/ctaocrypt/camellia.h cyassl/ctaocrypt/coding.h \
	cyassl/ctaocrypt/compress.h cyassl/ctaocrypt/des3.h \
	cyassl/ctaocrypt/dh.h cyassl/ctaocrypt/dsa.h \
	cyassl/ctaocrypt/ecc.h cyassl/ctaocrypt/error-crypt.h \
	cyassl/ctaocrypt/fips_test.h cyassl/ctaocrypt/hc128.h \
	cyassl/ctaocrypt/hmac.h cyassl/ctaocrypt/integer.h \
	cyassl/ctaocrypt/md2.h cyassl/ctaocrypt/md4.h \
	cyassl/ctaocrypt/md5.h cyassl/ctaocrypt/misc.h \
	cyassl/ctaocrypt/pkcs7.h cyassl/ctaocrypt/wc_port.h \
	cyassl/ctaocrypt/pwdbased.h cyassl/ctaocrypt/rabbit.h \
	cyassl/ctaocrypt/chacha.h cyassl/ctaocrypt/random.h \
	cyassl/ctaocrypt/ripemd.h cyassl/ctaocrypt/rsa.h \
	cyassl/ctaocrypt/settings.h cyassl/ctaocrypt/settings_comp.h \
	cyassl/ctaocrypt/sha256.h cyassl/ctaocrypt/sha512.h \
	cyassl/ctaocrypt/sha.h cyassl/ctaocrypt/blake2.h \
	cyassl/ctaocrypt/blake2-int.h cyassl/ctaocrypt/blake2-impl.h \
	cyassl/ctaocrypt/tfm.h cyassl/ctaocrypt/types.h \
	cyassl/ctaocrypt/visibility.h cyassl/ctaocrypt/logging.h \
	cyassl/ctaocrypt/memory.h cyassl/ctaocrypt/mpi_class.h \
	cyassl/ctaocrypt/mpi_superclass.h cyassl/openssl/asn1.h \
	cyassl/openssl/bio.h cyassl/openssl/bn.h cyassl/openssl/conf.h \
	cyassl/openssl/crypto.h cyassl/openssl/des.h \
	cyassl/openssl/dh.h cyassl/openssl/dsa.h \
	cyassl/openssl/ecdsa.h cyassl/openssl/ecdh.h \
	cyassl/openssl/ec.h cyassl/openssl/ec25519.h \
	cyassl/openssl/ed25519.h cyassl/openssl/engine.h \
	cyassl/openssl/err.h cyassl/openssl/evp.h \
	cyassl/openssl/hmac.h cyassl/openssl/lhash.h \
	cyassl/openssl/md4.h cyassl/openssl/md5.h \
	cyassl/openssl/ripemd.h cyassl/openssl/ocsp.h \
	cyassl/openssl/opensslconf.h cyassl/openssl/opensslv.h \
	cyassl/openssl/ossl_typ.h cyassl/openssl/pem.h \
	cyassl/openssl/pkcs12.h cyassl/openssl/rand.h \
	cyassl/openssl/rsa.h cyassl/openssl/sha.h cyassl/openssl/ssl.h \
	cyassl/openssl/stack.h cyassl/openssl/ui.h \
	cyassl/openssl/x509.h cyassl/openssl/x509v3.h \
	cyassl/error-ssl.h cyassl/ssl.h cyassl/sniffer_error.h \
	cyassl/sniffer.h cyassl/callbacks.h cyassl/certs_test.h \
	cyassl/test.h cyassl/version.h cyassl/ocsp.h cyassl/crl.h \
	cyassl/options.h wolfssl/wolfcrypt/aes.h \
	wolfssl/wolfcrypt/arc4.h wolfssl/wolfcrypt/asn.h \
	wolfssl/wolfcrypt/asn_public.h wolfssl/wolfcrypt/poly1305.h \
	wolfssl/wolfcrypt/camellia.h wolfssl/wolfcrypt/cmac.h \
	wolfssl/wolfcrypt/coding.h wolfssl/wolfcrypt/compress.h \
	wolfssl/wolfcrypt/des3.h wolfssl/wolfcrypt/dh.h \
	wolfssl/wolfcrypt/dsa.h wolfssl/wolfcrypt/ecc.h \
	wolfssl/wolfcrypt/curve25519.h wolfssl/wolfcrypt/ed25519.h \
	wolfssl/wolfcrypt/fe_operations.h \
	wolfssl/wolfcrypt/ge_operations.h \
	wolfssl/wolfcrypt/error-crypt.h wolfssl/wolfcrypt/fips_test.h \
	wolfssl/wolfcrypt/hash.h wolfssl/wolfcrypt/hc128.h \
	wolfssl/wolfcrypt/hmac.h wolfssl/wolfcrypt/integer.h \
	wolfssl/wolfcrypt/md2.h wolfssl/wolfcrypt/md4.h \
	wolfssl/wolfcrypt/md5.h wolfssl/wolfcrypt/misc.h \
	wolfssl/wolfcrypt/pkcs7.h wolfssl/wolfcrypt/wc_encrypt.h \
	wolfssl/wolfcrypt/wc_port.h wolfssl/wolfcrypt/pwdbased.h \
	wolfssl/wolfcrypt/rabbit.h wolfssl/wolfcrypt/chacha.h \
	wolfssl/wolfcrypt/chacha20_poly1305.h \
	wolfssl/wolfcrypt/random.h wolfssl/wolfcrypt/ripemd.h \
	wolfssl/wolfcrypt/rsa.h wolfssl/wolfcrypt/settings.h \
	wolfssl/wolfcrypt/sha256.h wolfssl/wolfcrypt/sha512.h \
	wolfssl/wolfcrypt/sha.h wolfssl/wolfcrypt/signature.h \
	wolfssl/wolfcrypt/blake2.h wolfssl/wolfcrypt/blake2-int.h \
	wolfssl/wolfcrypt/blake2-impl.h wolfssl/wolfcrypt/tfm.h \
	wolfssl/wolfcrypt/srp.h wolfssl/wolfcrypt/idea.h \
	wolfssl/wolfcrypt/types.h wolfssl/wolfcrypt/visibility.h \
	wolfssl/wolfcrypt/logging.h wolfssl/wolfcrypt/memory.h \
	wolfssl/wolfcrypt/mpi_class.h \
	wolfssl/wolfcrypt/mpi_superclass.h \
	wolfssl/wolfcrypt/mem_track.h wolfssl/wolfcrypt/wolfevent.h \
	wolfssl/wolfcrypt/pkcs12.h wolfssl/wolfcrypt/wolfmath.h \
	wolfssl/openssl/asn1.h wolfssl/openssl/aes.h \
	wolfssl/openssl/bio.h wolfssl/openssl/bn.h \
	wolfssl/openssl/conf.h wolfssl/openssl/crypto.h \
	wolfssl/openssl/des.h wolfssl/openssl/dh.h \
	wolfssl/openssl/dsa.h wolfssl/openssl/ecdsa.h \
	wolfssl/openssl/ecdh.h wolfssl/openssl/ec.h \
	wolfssl/openssl/ec25519.h wolfssl/openssl/ed25519.h \
	wolfssl/openssl/engine.h wolfssl/openssl/err.h \
	wolfssl/openssl/evp.h wolfssl/openssl/hmac.h \
	wolfssl/openssl/lhash.h wolfssl/openssl/md4.h \
	wolfssl/openssl/md5.h wolfssl/openssl/ripemd.h \
	wolfssl/openssl/ocsp.h wolfssl/openssl/opensslconf.h \
	wolfssl/openssl/opensslv.h wolfssl/openssl/ossl_typ.h \
	wolfssl/openssl/pem.h wolfssl/openssl/pkcs12.h \
	wolfssl/openssl/rand.h wolfssl/openssl/rsa.h \
	wolfssl/openssl/sha.h wolfssl/openssl/ssl.h \
	wolfssl/openssl/stack.h wolfssl/openssl/ui.h \
	wolfssl/openssl/x509.h wolfssl/openssl/x509v3.h \
	wolfssl/error-ssl.h wolfssl/ssl.h wolfssl/sniffer_error.h \
	wolfssl/sniffer.h wolfssl/callbacks.h wolfssl/certs_test.h \
	wolfssl/test.h wolfssl/version.h wolfssl/ocsp.h wolfssl/crl.h \
	wolfssl/options.h
am__noinst_HEADERS_DIST = cyassl/ctaocrypt/port/pic32/pic32mz-crypt.h \
	cyassl/internal.h cyassl/options.h \
	wolfssl/wolfcrypt/port/pic32/pic32mz-crypt.h \
	wolfssl/wolfcrypt/port/ti/ti-hash.h \
	wolfssl/wolfcrypt/port/ti/ti-ccm.h \
	wolfssl/wolfcrypt/port/nrf51.h \
	wolfssl/wolfcrypt/port/nxp/ksdk_port.h \
	wolfssl/wolfcrypt/port/atmel/atmel.h \
	wolfssl/wolfcrypt/port/cavium/cavium_nitrox.h \
	wolfssl/internal.h wolfssl/options.h \
	wolfcrypt/benchmark/benchmark.h wolfcrypt/test/test.h \
	examples/client/client.h examples/echoclient/echoclient.h \
	examples/echoserver/echoserver.h examples/server/server.h \
	mcapi/crypto.h
HEADERS = $(include_HEADERS) $(nobase_include_HEADERS) \
	$(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
# If stdout is a non-dumb tty, use colors.  If test -t is not supported,
# then this fails; a conservative approach.  Of course do not redirect
# stdout here, just stderr.
am__tty_colors = \
red=; grn=; lgn=; blu=; std=; \
test "X$(AM_COLOR_TESTS)" != Xno \
&& test "X$$TERM" != Xdumb \
&& { test "X$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
&& { \
  red='[0;31m'; \
  grn='[0;32m'; \
  lgn='[1;32m'; \
  blu='[1;34m'; \
  std='[m'; \
}
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/wolfssl/openssl-20170226/wolfssl/build-aux/missing --run aclocal-1.11
AMINCLUDE = aminclude.am
AMTAR = ${SHELL} /home/wolfssl/openssl-20170226/wolfssl/build-aux/missing --run tar
AM_CCASFLAGS = 
AM_CFLAGS = -DOPENSSL_EXTRA -D_POSIX_THREADS  -DHAVE_THREAD_LS -DNDEBUG -pthread -DTFM_TIMING_RESISTANT -DECC_TIMING_RESISTANT -DWC_RSA_BLINDING -DHAVE_AESGCM -DWOLFSSL_MD2 -DWOLFSSL_SHA512 -DWOLFSSL_SHA384 -DWOLFSSL_KEY_GEN -DWOLFSSL_CERT_GEN -DWOLFSSL_CERT_REQ -DWOLFSSL_ALLOW_SSLV3 -DNO_HC128 -DNO_RABBIT -DHAVE_POLY1305 -DHAVE_ONE_TIME_AUTH -DHAVE_CHACHA -DHAVE_HASHDRBG -DHAVE_TLS_EXTENSIONS -DHAVE_SECURE_RENEGOTIATION -DHAVE_EXTENDED_MASTER -DHAVE_OCSP -DSESSION_CERTS -DHAVE_CRL -DHAVE_TLS_EXTENSIONS -DHAVE_SNI -DHAVE_MAX_FRAGMENT -DHAVE_TRUNCATED_HMAC -DHAVE_SUPPORTED_CURVES -DHAVE_ECC -DTFM_ECC256 -DHAVE_STUNNEL -DWOLFSSL_ALWAYS_VERIFY_CB -DWOLFSSL_ALWAYS_KEEP_SNI -DHAVE_PKCS7 -DHAVE_AES_KEYWRAP -DWOLFSSL_AES_DIRECT -DHAVE_X963_KDF -Wall -Wno-unused -Os -fomit-frame-pointer
AM_CPPFLAGS =  -fvisibility=hidden
AM_DEFAULT_VERBOSITY = 0
AM_LDFLAGS = 
AR = ar
AUTOCONF = ${SHELL} /home/wolfssl/openssl-20170226/wolfssl/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/wolfssl/openssl-20170226/wolfssl/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/wolfssl/openssl-20170226/wolfssl/build-aux/missing --run automake-1.11
AWK = gawk
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=none
CCASFLAGS = -DWOLFSSL_DH_CONST -DWOLFSSL_AES_COUNTER -DHAVE_AESGCM -DWOLFSSL_AES_DIRECT -DHAVE_AES_CCM -DHAVE_AES_ECB -DHAVE_AES_DECRYPT -DHAVE_STUNNEL -DSHOW_CERTS
CCDEPMODE = depmode=none
CFLAGS = -DWOLFSSL_DH_CONST -DWOLFSSL_AES_COUNTER -DHAVE_AESGCM -DWOLFSSL_AES_DIRECT -DHAVE_AES_CCM -DHAVE_AES_ECB -DHAVE_AES_DECRYPT -DHAVE_STUNNEL -DSHOW_CERTS  -Werror -Wno-pragmas -Wall -Wno-strict-aliasing -Wextra -Wunknown-pragmas --param=ssp-buffer-size=1 -Waddress -Warray-bounds -Wbad-function-cast -Wchar-subscripts -Wcomment -Wfloat-equal -Wformat-security -Wformat=2 -Wmissing-field-initializers -Wmissing-noreturn -Wmissing-prototypes -Wnested-externs -Wnormalized=id -Woverride-init -Wpointer-arith -Wpointer-sign -Wredundant-decls -Wshadow -Wsign-compare -Wstrict-overflow=1 -Wswitch-enum -Wundef -Wunused -Wunused-result -Wunused-variable -Wwrite-strings -fwrapv 
CFLAG_VISIBILITY = -fvisibility=hidden
CPP = gcc -E
CPPFLAGS =  -fvisibility=hidden
CXX = g++
CXXCPP = /lib/cpp
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = link -dump -symbols
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GENERIC_CONFIG = wolfssl-config
GREP = /bin/grep
HAVE_OPENSSL_CMD = 
HAVE_VALGRIND = 
HAVE_VISIBILITY = 1
HEX_VERSION = 0x03010003
INC_AMINCLUDE = include $(top_builddir)/aminclude.am
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPPHEADERS = 
IPPLIBS = 
IPPLINK = 
LD = /proj/lpux/6.0/i386/cross/i486--netbsdelf/bin/ld
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_ADD = 
LIB_STATIC_ADD = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/wolfssl/openssl-20170226/wolfssl/build-aux/missing --run makeinfo
MCHECK = 
MKDIR_P = /bin/mkdir -p
NM = link -dump -symbols
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = wolfssl
PACKAGE_BUGREPORT = https://github.com/wolfssl/wolfssl/issues
PACKAGE_NAME = wolfssl
PACKAGE_STRING = wolfssl 3.10.3
PACKAGE_TARNAME = wolfssl
PACKAGE_VERSION = 3.10.3
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = MAKE=make
SHELL = /bin/sh
STRIP = strip
VERSION = 3.10.3
WOLFSSL_LIBRARY_VERSION = 10:1:0
abs_builddir = /home/wolfssl/openssl-20170226/wolfssl
abs_srcdir = /home/wolfssl/openssl-20170226/wolfssl
abs_top_builddir = /home/wolfssl/openssl-20170226/wolfssl
abs_top_srcdir = /home/wolfssl/openssl-20170226/wolfssl
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = link -dump -symbols
am__include = #
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = i386-pc-linux-gnu
build_alias = i386-pc-linux
build_cpu = i386
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i486-pc-netbsd
host_alias = i486-netbsd
host_cpu = i486
host_os = netbsd
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/wolfssl/openssl-20170226/wolfssl/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /wolfssl
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .

# includes append to these:
SUFFIXES = 
TESTS = $(check_PROGRAMS) $(check_SCRIPTS)
CLEANFILES = cert.der cert.pem certecc.der certecc.pem certreq.der \
	certreq.pem key.der key.pem ntru-cert.der ntru-cert.pem \
	ntru-key.raw othercert.der othercert.pem pkcs7cert.der \
	pkcs7encryptedDataAES128CBC.der \
	pkcs7encryptedDataAES192CBC.der \
	pkcs7encryptedDataAES256CBC_attribs.der \
	pkcs7encryptedDataAES256CBC.der \
	pkcs7encryptedDataAES256CBC_multi_attribs.der \
	pkcs7encryptedDataDES3.der pkcs7encryptedDataDES.der \
	pkcs7envelopedDataAES256CBC_ECDH.der \
	pkcs7envelopedDataAES128CBC_ECDH_SHA1KDF.der \
	pkcs7envelopedDataAES256CBC_ECDH_SHA256KDF.der \
	pkcs7envelopedDataAES256CBC_ECDH_SHA512KDF.der \
	pkcs7envelopedDataAES256CBC_ECDH_SHA512KDF_ukm.der \
	pkcs7envelopedDataDES3.der pkcs7envelopedDataAES128CBC.der \
	pkcs7envelopedDataAES192CBC.der \
	pkcs7envelopedDataAES256CBC.der pkcs7signedData.der
DISTCLEANFILES = aminclude.am wolfcrypt/benchmark/.libs/benchmark \
	wolfcrypt/test/.libs/testwolfcrypt \
	examples/client/.libs/client \
	examples/echoclient/.libs/echoclient \
	examples/echoserver/.libs/echoserver \
	examples/server/.libs/server examples/sctp/.libs/sctp-server \
	examples/sctp/.libs/sctp-server-dtls \
	examples/sctp/.libs/sctp-client \
	examples/sctp/.libs/sctp-client-dtls \
	testsuite/.libs/testsuite.test tests/.libs/unit.test \
	sslSniffer/sslSnifferTest/.libs/snifftest cyassl-config \
	wolfssl-config
noinst_HEADERS = cyassl/ctaocrypt/port/pic32/pic32mz-crypt.h \
	cyassl/internal.h $(am__append_1) \
	wolfssl/wolfcrypt/port/pic32/pic32mz-crypt.h \
	wolfssl/wolfcrypt/port/ti/ti-hash.h \
	wolfssl/wolfcrypt/port/ti/ti-ccm.h \
	wolfssl/wolfcrypt/port/nrf51.h \
	wolfssl/wolfcrypt/port/nxp/ksdk_port.h \
	wolfssl/wolfcrypt/port/atmel/atmel.h $(am__append_3) \
	wolfssl/internal.h $(am__append_4) $(am__append_66) \
	$(am__append_71) $(am__append_73) $(am__append_82)
lib_LTLIBRARIES = src/libwolfssl.la
man_MANS = 
noinst_LTLIBRARIES = 
include_HEADERS = $(am__append_7)
nobase_include_HEADERS = cyassl/ctaocrypt/aes.h \
	cyassl/ctaocrypt/arc4.h cyassl/ctaocrypt/asn.h \
	cyassl/ctaocrypt/asn_public.h cyassl/ctaocrypt/poly1305.h \
	cyassl/ctaocrypt/camellia.h cyassl/ctaocrypt/coding.h \
	cyassl/ctaocrypt/compress.h cyassl/ctaocrypt/des3.h \
	cyassl/ctaocrypt/dh.h cyassl/ctaocrypt/dsa.h \
	cyassl/ctaocrypt/ecc.h cyassl/ctaocrypt/error-crypt.h \
	cyassl/ctaocrypt/fips_test.h cyassl/ctaocrypt/hc128.h \
	cyassl/ctaocrypt/hmac.h cyassl/ctaocrypt/integer.h \
	cyassl/ctaocrypt/md2.h cyassl/ctaocrypt/md4.h \
	cyassl/ctaocrypt/md5.h cyassl/ctaocrypt/misc.h \
	cyassl/ctaocrypt/pkcs7.h cyassl/ctaocrypt/wc_port.h \
	cyassl/ctaocrypt/pwdbased.h cyassl/ctaocrypt/rabbit.h \
	cyassl/ctaocrypt/chacha.h cyassl/ctaocrypt/random.h \
	cyassl/ctaocrypt/ripemd.h cyassl/ctaocrypt/rsa.h \
	cyassl/ctaocrypt/settings.h cyassl/ctaocrypt/settings_comp.h \
	cyassl/ctaocrypt/sha256.h cyassl/ctaocrypt/sha512.h \
	cyassl/ctaocrypt/sha.h cyassl/ctaocrypt/blake2.h \
	cyassl/ctaocrypt/blake2-int.h cyassl/ctaocrypt/blake2-impl.h \
	cyassl/ctaocrypt/tfm.h cyassl/ctaocrypt/types.h \
	cyassl/ctaocrypt/visibility.h cyassl/ctaocrypt/logging.h \
	cyassl/ctaocrypt/memory.h cyassl/ctaocrypt/mpi_class.h \
	cyassl/ctaocrypt/mpi_superclass.h cyassl/openssl/asn1.h \
	cyassl/openssl/bio.h cyassl/openssl/bn.h cyassl/openssl/conf.h \
	cyassl/openssl/crypto.h cyassl/openssl/des.h \
	cyassl/openssl/dh.h cyassl/openssl/dsa.h \
	cyassl/openssl/ecdsa.h cyassl/openssl/ecdh.h \
	cyassl/openssl/ec.h cyassl/openssl/ec25519.h \
	cyassl/openssl/ed25519.h cyassl/openssl/engine.h \
	cyassl/openssl/err.h cyassl/openssl/evp.h \
	cyassl/openssl/hmac.h cyassl/openssl/lhash.h \
	cyassl/openssl/md4.h cyassl/openssl/md5.h \
	cyassl/openssl/ripemd.h cyassl/openssl/ocsp.h \
	cyassl/openssl/opensslconf.h cyassl/openssl/opensslv.h \
	cyassl/openssl/ossl_typ.h cyassl/openssl/pem.h \
	cyassl/openssl/pkcs12.h cyassl/openssl/rand.h \
	cyassl/openssl/rsa.h cyassl/openssl/sha.h cyassl/openssl/ssl.h \
	cyassl/openssl/stack.h cyassl/openssl/ui.h \
	cyassl/openssl/x509.h cyassl/openssl/x509v3.h \
	cyassl/error-ssl.h cyassl/ssl.h cyassl/sniffer_error.h \
	cyassl/sniffer.h cyassl/callbacks.h cyassl/certs_test.h \
	cyassl/test.h cyassl/version.h cyassl/ocsp.h cyassl/crl.h \
	$(am__append_2) wolfssl/wolfcrypt/aes.h \
	wolfssl/wolfcrypt/arc4.h wolfssl/wolfcrypt/asn.h \
	wolfssl/wolfcrypt/asn_public.h wolfssl/wolfcrypt/poly1305.h \
	wolfssl/wolfcrypt/camellia.h wolfssl/wolfcrypt/cmac.h \
	wolfssl/wolfcrypt/coding.h wolfssl/wolfcrypt/compress.h \
	wolfssl/wolfcrypt/des3.h wolfssl/wolfcrypt/dh.h \
	wolfssl/wolfcrypt/dsa.h wolfssl/wolfcrypt/ecc.h \
	wolfssl/wolfcrypt/curve25519.h wolfssl/wolfcrypt/ed25519.h \
	wolfssl/wolfcrypt/fe_operations.h \
	wolfssl/wolfcrypt/ge_operations.h \
	wolfssl/wolfcrypt/error-crypt.h wolfssl/wolfcrypt/fips_test.h \
	wolfssl/wolfcrypt/hash.h wolfssl/wolfcrypt/hc128.h \
	wolfssl/wolfcrypt/hmac.h wolfssl/wolfcrypt/integer.h \
	wolfssl/wolfcrypt/md2.h wolfssl/wolfcrypt/md4.h \
	wolfssl/wolfcrypt/md5.h wolfssl/wolfcrypt/misc.h \
	wolfssl/wolfcrypt/pkcs7.h wolfssl/wolfcrypt/wc_encrypt.h \
	wolfssl/wolfcrypt/wc_port.h wolfssl/wolfcrypt/pwdbased.h \
	wolfssl/wolfcrypt/rabbit.h wolfssl/wolfcrypt/chacha.h \
	wolfssl/wolfcrypt/chacha20_poly1305.h \
	wolfssl/wolfcrypt/random.h wolfssl/wolfcrypt/ripemd.h \
	wolfssl/wolfcrypt/rsa.h wolfssl/wolfcrypt/settings.h \
	wolfssl/wolfcrypt/sha256.h wolfssl/wolfcrypt/sha512.h \
	wolfssl/wolfcrypt/sha.h wolfssl/wolfcrypt/signature.h \
	wolfssl/wolfcrypt/blake2.h wolfssl/wolfcrypt/blake2-int.h \
	wolfssl/wolfcrypt/blake2-impl.h wolfssl/wolfcrypt/tfm.h \
	wolfssl/wolfcrypt/srp.h wolfssl/wolfcrypt/idea.h \
	wolfssl/wolfcrypt/types.h wolfssl/wolfcrypt/visibility.h \
	wolfssl/wolfcrypt/logging.h wolfssl/wolfcrypt/memory.h \
	wolfssl/wolfcrypt/mpi_class.h \
	wolfssl/wolfcrypt/mpi_superclass.h \
	wolfssl/wolfcrypt/mem_track.h wolfssl/wolfcrypt/wolfevent.h \
	wolfssl/wolfcrypt/pkcs12.h wolfssl/wolfcrypt/wolfmath.h \
	wolfssl/openssl/asn1.h wolfssl/openssl/aes.h \
	wolfssl/openssl/bio.h wolfssl/openssl/bn.h \
	wolfssl/openssl/conf.h wolfssl/openssl/crypto.h \
	wolfssl/openssl/des.h wolfssl/openssl/dh.h \
	wolfssl/openssl/dsa.h wolfssl/openssl/ecdsa.h \
	wolfssl/openssl/ecdh.h wolfssl/openssl/ec.h \
	wolfssl/openssl/ec25519.h wolfssl/openssl/ed25519.h \
	wolfssl/openssl/engine.h wolfssl/openssl/err.h \
	wolfssl/openssl/evp.h wolfssl/openssl/hmac.h \
	wolfssl/openssl/lhash.h wolfssl/openssl/md4.h \
	wolfssl/openssl/md5.h wolfssl/openssl/ripemd.h \
	wolfssl/openssl/ocsp.h wolfssl/openssl/opensslconf.h \
	wolfssl/openssl/opensslv.h wolfssl/openssl/ossl_typ.h \
	wolfssl/openssl/pem.h wolfssl/openssl/pkcs12.h \
	wolfssl/openssl/rand.h wolfssl/openssl/rsa.h \
	wolfssl/openssl/sha.h wolfssl/openssl/ssl.h \
	wolfssl/openssl/stack.h wolfssl/openssl/ui.h \
	wolfssl/openssl/x509.h wolfssl/openssl/x509v3.h \
	wolfssl/error-ssl.h wolfssl/ssl.h wolfssl/sniffer_error.h \
	wolfssl/sniffer.h wolfssl/callbacks.h wolfssl/certs_test.h \
	wolfssl/test.h wolfssl/version.h wolfssl/ocsp.h wolfssl/crl.h \
	$(am__append_5)
EXTRA_HEADERS = 
BUILT_SOURCES = 

# wolfSSL CSharp wrapper files

# user crypto plug in example

# leave openssl.test as extra until non bash works
EXTRA_DIST = lib/dummy wolfssl-ntru.vcproj wolfssl.vcproj \
	wolfssl.vcxproj wolfssl-ntru.sln wolfssl.sln wolfssl64.sln \
	valgrind-error.sh gencertbuf.pl README.md LICENSING INSTALL \
	IPP .cproject .project wrapper/python/wolfcrypt/.gitignore \
	wrapper/python/wolfcrypt/docs/asymmetric.rst \
	wrapper/python/wolfcrypt/docs/conf.py \
	wrapper/python/wolfcrypt/docs/digest.rst \
	wrapper/python/wolfcrypt/docs/index.rst \
	wrapper/python/wolfcrypt/docs/mac.rst \
	wrapper/python/wolfcrypt/docs/Makefile \
	wrapper/python/wolfcrypt/docs/random.rst \
	wrapper/python/wolfcrypt/docs/symmetric.rst \
	wrapper/python/wolfcrypt/LICENSING.rst \
	wrapper/python/wolfcrypt/MANIFEST.in \
	wrapper/python/wolfcrypt/README.rst \
	wrapper/python/wolfcrypt/requirements-testing.txt \
	wrapper/python/wolfcrypt/setup.py \
	wrapper/python/wolfcrypt/test/test_ciphers.py \
	wrapper/python/wolfcrypt/test/test_hashes.py \
	wrapper/python/wolfcrypt/test/test_random.py \
	wrapper/python/wolfcrypt/tox.ini \
	wrapper/python/wolfcrypt/wolfcrypt/__about__.py \
	wrapper/python/wolfcrypt/wolfcrypt/__init__.py \
	wrapper/python/wolfcrypt/wolfcrypt/build_ffi.py \
	wrapper/python/wolfcrypt/wolfcrypt/ciphers.py \
	wrapper/python/wolfcrypt/wolfcrypt/exceptions.py \
	wrapper/python/wolfcrypt/wolfcrypt/hashes.py \
	wrapper/python/wolfcrypt/wolfcrypt/random.py \
	wrapper/python/wolfcrypt/wolfcrypt/utils.py \
	wrapper/CSharp/wolfSSL-DTLS-PSK-Server/App.config \
	wrapper/CSharp/wolfSSL-DTLS-PSK-Server/Properties/AssemblyInfo.cs \
	wrapper/CSharp/wolfSSL-DTLS-PSK-Server/wolfSSL-DTLS-PSK-Server.cs \
	wrapper/CSharp/wolfSSL-DTLS-PSK-Server/wolfSSL-DTLS-PSK-Server.csproj \
	wrapper/CSharp/wolfSSL-DTLS-Server/App.config \
	wrapper/CSharp/wolfSSL-DTLS-Server/Properties/AssemblyInfo.cs \
	wrapper/CSharp/wolfSSL-DTLS-Server/wolfSSL-DTLS-Server.cs \
	wrapper/CSharp/wolfSSL-DTLS-Server/wolfSSL-DTLS-Server.csproj \
	wrapper/CSharp/wolfSSL-TLS-PSK-Server/App.config \
	wrapper/CSharp/wolfSSL-TLS-PSK-Server/Properties/AssemblyInfo.cs \
	wrapper/CSharp/wolfSSL-TLS-PSK-Server/wolfSSL-TLS-PSK-Server.cs \
	wrapper/CSharp/wolfSSL-TLS-PSK-Server/wolfSSL-TLS-PSK-Server.csproj \
	wrapper/CSharp/wolfSSL-TLS-Server/App.config \
	wrapper/CSharp/wolfSSL-TLS-Server/Properties/AssemblyInfo.cs \
	wrapper/CSharp/wolfSSL-TLS-Server/Properties/Settings.Designer.cs \
	wrapper/CSharp/wolfSSL-TLS-Server/Properties/Settings.settings \
	wrapper/CSharp/wolfSSL-TLS-Server/wolfSSL-TLS-Server.cs \
	wrapper/CSharp/wolfSSL-TLS-Server/wolfSSL-TLS-Server.csproj \
	wrapper/CSharp/wolfSSL-Example-IOCallbacks/App.config \
	wrapper/CSharp/wolfSSL-Example-IOCallbacks/Properties/AssemblyInfo.cs \
	wrapper/CSharp/wolfSSL-Example-IOCallbacks/wolfSSL-Example-IOCallbacks.cs \
	wrapper/CSharp/wolfSSL-Example-IOCallbacks/wolfSSL-Example-IOCallbacks.csproj \
	wrapper/CSharp/wolfSSL_CSharp.sln \
	wrapper/CSharp/wolfSSL_CSharp/Properties/AssemblyInfo.cs \
	wrapper/CSharp/wolfSSL_CSharp/Properties/Resources.Designer.cs \
	wrapper/CSharp/wolfSSL_CSharp/Properties/Resources.resx \
	wrapper/CSharp/wolfSSL_CSharp/wolfSSL.cs \
	wrapper/CSharp/wolfSSL_CSharp/wolfSSL_CSharp.csproj \
	ctaocrypt/src/misc.c cyassl/sniffer_error.rc \
	wolfssl/sniffer_error.rc certs/ca-cert.pem certs/ca-key.pem \
	certs/client-cert.pem certs/client-keyEnc.pem \
	certs/client-key.pem certs/ecc-key.pem \
	certs/ecc-keyPkcs8Enc.pem certs/ecc-key-comp.pem \
	certs/ecc-keyPkcs8.pem certs/ecc-client-key.pem \
	certs/ecc-client-keyPub.pem certs/client-ecc-cert.pem \
	certs/client-ca.pem certs/ntru-cert.pem certs/dh2048.pem \
	certs/server-cert.pem certs/server-ecc.pem \
	certs/server-ecc-comp.pem certs/server-ecc-rsa.pem \
	certs/server-keyEnc.pem certs/server-key.pem \
	certs/server-keyPkcs8Enc12.pem certs/server-keyPkcs8Enc2.pem \
	certs/server-keyPkcs8Enc.pem certs/server-keyPkcs8.pem \
	certs/server-revoked-cert.pem certs/server-revoked-key.pem \
	certs/wolfssl-website-ca.pem certs/test-servercert.p12 \
	certs/dsaparams.pem certs/ca-key.der certs/ca-cert.der \
	certs/client-cert.der certs/client-key.der \
	certs/client-ecc-cert.der certs/client-keyPub.der \
	certs/dh2048.der certs/rsa2048.der certs/dsa2048.der \
	certs/ecc-client-key.der certs/ecc-client-keyPub.der \
	certs/ecc-key.der certs/ecc-keyPub.der certs/server-key.der \
	certs/server-cert.der certs/server-ecc-comp.der \
	certs/server-ecc.der certs/server-ecc-rsa.der \
	certs/server-cert-chain.der certs/ntru-key.raw \
	certs/test-pathlen/server-0-1-ca.pem \
	certs/test-pathlen/server-0-1-cert.pem \
	certs/test-pathlen/server-0-1-chain.pem \
	certs/test-pathlen/server-0-ca.pem \
	certs/test-pathlen/server-0-cert.pem \
	certs/test-pathlen/server-0-chain.pem \
	certs/test-pathlen/server-1-0-ca.pem \
	certs/test-pathlen/server-1-0-cert.pem \
	certs/test-pathlen/server-1-0-chain.pem \
	certs/test-pathlen/server-1-ca.pem \
	certs/test-pathlen/server-1-cert.pem \
	certs/test-pathlen/server-1-chain.pem \
	certs/test-pathlen/server-127-ca.pem \
	certs/test-pathlen/server-127-cert.pem \
	certs/test-pathlen/server-127-chain.pem \
	certs/test-pathlen/server-128-ca.pem \
	certs/test-pathlen/server-128-cert.pem \
	certs/test-pathlen/server-128-chain.pem certs/1024/ca-cert.pem \
	certs/1024/ca-key.pem certs/1024/client-cert.pem \
	certs/1024/client-key.pem certs/1024/dh1024.pem \
	certs/1024/dsa1024.pem certs/1024/server-cert.pem \
	certs/1024/server-key.pem certs/1024/ca-cert.der \
	certs/1024/ca-key.der certs/1024/client-cert.der \
	certs/1024/client-key.der certs/1024/client-keyPub.der \
	certs/1024/dh1024.der certs/1024/dsa1024.der \
	certs/1024/rsa1024.der certs/1024/server-cert.der \
	certs/1024/server-key.der certs/crl/crl.pem \
	certs/crl/cliCrl.pem certs/crl/eccSrvCRL.pem \
	certs/crl/eccCliCRL.pem certs/crl/crl.revoked \
	certs/external/ca-globalsign-root-r2.pem \
	certs/external/ca-verisign-g5.pem certs/ocsp/index0.txt \
	certs/ocsp/index1.txt certs/ocsp/index2.txt \
	certs/ocsp/index3.txt certs/ocsp/openssl.cnf \
	certs/ocsp/ocspd0.sh certs/ocsp/ocspd1.sh certs/ocsp/ocspd2.sh \
	certs/ocsp/ocspd3.sh certs/ocsp/intermediate1-ca-key.pem \
	certs/ocsp/intermediate1-ca-cert.pem \
	certs/ocsp/intermediate2-ca-key.pem \
	certs/ocsp/intermediate2-ca-cert.pem \
	certs/ocsp/intermediate3-ca-key.pem \
	certs/ocsp/intermediate3-ca-cert.pem \
	certs/ocsp/ocsp-responder-key.pem \
	certs/ocsp/ocsp-responder-cert.pem certs/ocsp/server1-key.pem \
	certs/ocsp/server1-cert.pem certs/ocsp/server2-key.pem \
	certs/ocsp/server2-cert.pem certs/ocsp/server3-key.pem \
	certs/ocsp/server3-cert.pem certs/ocsp/server4-key.pem \
	certs/ocsp/server4-cert.pem certs/ocsp/server5-key.pem \
	certs/ocsp/server5-cert.pem certs/ocsp/root-ca-key.pem \
	certs/ocsp/root-ca-cert.pem swig/PythonBuild.sh swig/README \
	swig/wolfssl.i swig/wolfssl_adds.c swig/python_wolfssl.vcproj \
	swig/rsasign.py swig/runme.py support/wolfssl.pc \
	wolfcrypt/user-crypto/configure.ac \
	wolfcrypt/user-crypto/autogen.sh \
	wolfcrypt/user-crypto/include/user_rsa.h \
	wolfcrypt/user-crypto/src/rsa.c \
	wolfcrypt/user-crypto/lib/.gitkeep \
	wolfcrypt/user-crypto/README.txt \
	wolfcrypt/user-crypto/Makefile.am \
	wolfcrypt/benchmark/benchmark.sln \
	wolfcrypt/benchmark/benchmark.vcproj src/bio.c \
	wolfcrypt/src/misc.c wolfcrypt/src/evp.c wolfcrypt/src/asm.c \
	wolfcrypt/src/aes_asm.asm wolfcrypt/src/ecc_fp.c \
	wolfcrypt/src/fp_mont_small.i wolfcrypt/src/fp_mul_comba_12.i \
	wolfcrypt/src/fp_mul_comba_17.i \
	wolfcrypt/src/fp_mul_comba_20.i \
	wolfcrypt/src/fp_mul_comba_24.i \
	wolfcrypt/src/fp_mul_comba_28.i \
	wolfcrypt/src/fp_mul_comba_32.i wolfcrypt/src/fp_mul_comba_3.i \
	wolfcrypt/src/fp_mul_comba_48.i wolfcrypt/src/fp_mul_comba_4.i \
	wolfcrypt/src/fp_mul_comba_64.i wolfcrypt/src/fp_mul_comba_6.i \
	wolfcrypt/src/fp_mul_comba_7.i wolfcrypt/src/fp_mul_comba_8.i \
	wolfcrypt/src/fp_mul_comba_9.i \
	wolfcrypt/src/fp_mul_comba_small_set.i \
	wolfcrypt/src/fp_sqr_comba_12.i \
	wolfcrypt/src/fp_sqr_comba_17.i \
	wolfcrypt/src/fp_sqr_comba_20.i \
	wolfcrypt/src/fp_sqr_comba_24.i \
	wolfcrypt/src/fp_sqr_comba_28.i \
	wolfcrypt/src/fp_sqr_comba_32.i wolfcrypt/src/fp_sqr_comba_3.i \
	wolfcrypt/src/fp_sqr_comba_48.i wolfcrypt/src/fp_sqr_comba_4.i \
	wolfcrypt/src/fp_sqr_comba_64.i wolfcrypt/src/fp_sqr_comba_6.i \
	wolfcrypt/src/fp_sqr_comba_7.i wolfcrypt/src/fp_sqr_comba_8.i \
	wolfcrypt/src/fp_sqr_comba_9.i \
	wolfcrypt/src/fp_sqr_comba_small_set.i \
	wolfcrypt/src/port/ti/ti-aes.c wolfcrypt/src/port/ti/ti-des3.c \
	wolfcrypt/src/port/ti/ti-hash.c wolfcrypt/src/port/ti/ti-ccm.c \
	wolfcrypt/src/port/pic32/pic32mz-hash.c \
	wolfcrypt/src/port/nrf51.c wolfcrypt/src/port/arm/armv8-aes.c \
	wolfcrypt/src/port/arm/armv8-sha256.c \
	wolfcrypt/src/port/nxp/ksdk_port.c \
	wolfcrypt/src/port/atmel/atmel.c \
	wolfcrypt/src/port/atmel/README.md $(am__append_68) \
	wolfcrypt/test/test.sln wolfcrypt/test/test.vcproj \
	examples/client/client.sln examples/client/client-ntru.vcproj \
	examples/client/client.vcproj examples/client/client.vcxproj \
	examples/echoclient/echoclient.sln \
	examples/echoclient/echoclient-ntru.vcproj \
	examples/echoclient/echoclient.vcproj \
	examples/echoclient/echoclient.vcxproj \
	examples/echoserver/echoserver.sln \
	examples/echoserver/echoserver-ntru.vcproj \
	examples/echoserver/echoserver.vcproj \
	examples/echoserver/echoserver.vcxproj \
	examples/server/server.sln examples/server/server-ntru.vcproj \
	examples/server/server.vcproj examples/server/server.vcxproj \
	testsuite/testsuite.sln testsuite/testsuite-ntru.vcproj \
	testsuite/testsuite.vcproj testsuite/testsuite.vcxproj input \
	quit tests/unit.h tests/test.conf tests/test-qsh.conf \
	tests/test-psk-no-id.conf tests/test-dtls.conf \
	tests/test-sctp.conf tests/test-sig.conf \
	sslSniffer/sslSniffer.vcproj sslSniffer/sslSniffer.vcxproj \
	sslSniffer/sslSnifferTest/sslSniffTest.vcproj $(am__append_79) \
	$(am__append_85) scripts/testsuite.pcap scripts/ping.test \
	scripts/openssl.test
dist_doc_DATA = certs/taoCert.txt doc/README.txt
dist_noinst_SCRIPTS = $(am__append_83) $(am__append_84) \
	$(am__append_86) $(am__append_87) $(am__append_88) \
	$(am__append_89) $(am__append_90) $(am__append_91) \
	$(am__append_92) $(am__append_93)
noinst_SCRIPTS = $(am__append_6)
check_SCRIPTS = $(dist_noinst_SCRIPTS)
exampledir = $(docdir)/example
dist_example_DATA = examples/client/client.c \
	examples/echoclient/echoclient.c \
	examples/echoserver/echoserver.c examples/server/server.c \
	examples/sctp/sctp-server.c examples/sctp/sctp-server-dtls.c \
	examples/sctp/sctp-client.c examples/sctp/sctp-client-dtls.c
ACLOCAL_AMFLAGS = -I m4
src_libwolfssl_la_SOURCES = $(am__append_8) $(am__append_9) \
	$(am__append_10) $(am__append_11) $(am__append_12) \
	$(am__append_13) $(am__append_14) wolfcrypt/src/hmac.c \
	wolfcrypt/src/hash.c $(am__append_15) $(am__append_16) \
	$(am__append_17) $(am__append_18) $(am__append_19) \
	$(am__append_20) $(am__append_21) $(am__append_22) \
	$(am__append_23) $(am__append_24) $(am__append_25) \
	$(am__append_26) $(am__append_27) wolfcrypt/src/logging.c \
	wolfcrypt/src/wc_encrypt.c wolfcrypt/src/wc_port.c \
	wolfcrypt/src/error.c wolfcrypt/src/signature.c \
	wolfcrypt/src/wolfmath.c $(am__append_28) $(am__append_29) \
	$(am__append_30) $(am__append_31) $(am__append_32) \
	$(am__append_33) $(am__append_34) $(am__append_35) \
	$(am__append_36) $(am__append_37) $(am__append_38) \
	$(am__append_39) $(am__append_40) $(am__append_41) \
	$(am__append_42) $(am__append_43) $(am__append_44) \
	$(am__append_45) $(am__append_46) $(am__append_47) \
	$(am__append_48) $(am__append_49) $(am__append_50) \
	$(am__append_51) $(am__append_52) $(am__append_53) \
	$(am__append_54) $(am__append_55) $(am__append_56) \
	$(am__append_57) $(am__append_58) $(am__append_59) \
	$(am__append_60) $(am__append_61) $(am__append_62) \
	$(am__append_63) $(am__append_64) $(am__append_67)
src_libwolfssl_la_LDFLAGS = ${AM_LDFLAGS} -no-undefined -version-info ${WOLFSSL_LIBRARY_VERSION}
src_libwolfssl_la_LIBADD = $(LIBM) $(LIB_ADD) $(LIB_STATIC_ADD)
src_libwolfssl_la_CFLAGS = -DBUILDING_WOLFSSL $(AM_CFLAGS)
src_libwolfssl_la_CPPFLAGS = -DBUILDING_WOLFSSL $(AM_CPPFLAGS)
#ippdir = $(libdir)
#ipp_DATA = $(IPPLIBS)
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = support/wolfssl.pc
wolfcrypt_benchmark_benchmark_SOURCES = wolfcrypt/benchmark/benchmark.c
wolfcrypt_benchmark_benchmark_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
wolfcrypt_benchmark_benchmark_DEPENDENCIES = src/libwolfssl.la
wolfcrypt_test_testwolfcrypt_SOURCES = wolfcrypt/test/test.c
wolfcrypt_test_testwolfcrypt_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
wolfcrypt_test_testwolfcrypt_DEPENDENCIES = src/libwolfssl.la
examples_client_client_SOURCES = examples/client/client.c
examples_client_client_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
examples_client_client_DEPENDENCIES = src/libwolfssl.la
examples_echoclient_echoclient_SOURCES = examples/echoclient/echoclient.c
examples_echoclient_echoclient_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
examples_echoclient_echoclient_DEPENDENCIES = src/libwolfssl.la
examples_echoserver_echoserver_SOURCES = examples/echoserver/echoserver.c
examples_echoserver_echoserver_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
examples_echoserver_echoserver_DEPENDENCIES = src/libwolfssl.la
examples_server_server_SOURCES = examples/server/server.c
examples_server_server_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
examples_server_server_DEPENDENCIES = src/libwolfssl.la
#examples_sctp_sctp_server_SOURCES = examples/sctp/sctp-server.c
#examples_sctp_sctp_server_LDADD = $(LIB_STATIC_ADD)
#examples_sctp_sctp_server_dtls_SOURCES = examples/sctp/sctp-server-dtls.c
#examples_sctp_sctp_server_dtls_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
#examples_sctp_sctp_server_dtls_DEPENDENCIES = src/libwolfssl.la
#examples_sctp_sctp_client_SOURCES = examples/sctp/sctp-client.c
#examples_sctp_sctp_client_LDADD = $(LIB_STATIC_ADD)
#examples_sctp_sctp_client_dtls_SOURCES = examples/sctp/sctp-client-dtls.c
#examples_sctp_sctp_client_dtls_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
#examples_sctp_sctp_client_dtls_DEPENDENCIES = src/libwolfssl.la
testsuite_testsuite_test_SOURCES = \
			      wolfcrypt/test/test.c \
			      examples/client/client.c \
			      examples/echoclient/echoclient.c \
			      examples/echoserver/echoserver.c \
			      examples/server/server.c \
			      testsuite/testsuite.c

testsuite_testsuite_test_CFLAGS = -DNO_MAIN_DRIVER $(AM_CFLAGS)
testsuite_testsuite_test_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
testsuite_testsuite_test_DEPENDENCIES = src/libwolfssl.la
tests_unit_test_SOURCES = \
                  tests/unit.c \
                  tests/api.c \
                  tests/suites.c \
                  tests/hash.c \
                  tests/srp.c \
                  examples/client/client.c \
                  examples/server/server.c

tests_unit_test_CFLAGS = -DNO_MAIN_DRIVER $(AM_CFLAGS)
tests_unit_test_LDADD = src/libwolfssl.la $(LIB_STATIC_ADD)
tests_unit_test_DEPENDENCIES = src/libwolfssl.la
#sslSniffer_sslSnifferTest_snifftest_SOURCES = sslSniffer/sslSnifferTest/snifftest.c
#sslSniffer_sslSnifferTest_snifftest_LDADD = src/libwolfssl.la -lpcap $(LIB_STATIC_ADD)
#sslSniffer_sslSnifferTest_snifftest_DEPENDENCIES = src/libwolfssl.la
#mcapi_test_SOURCES = mcapi/crypto.c \
#                     mcapi/mcapi_test.c

#mcapi_test_LDADD = src/libwolfssl.la 
#mcapi_test_DEPENDENCIES = src/libwolfssl.la

# Exclude references to non-DFSG sources from build files
#TESTS_ENVIRONMENT = ./valgrind-error.sh
TEST_EXTENSIONS = .test
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj .s
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/wrapper/include.am $(srcdir)/wrapper/python/wolfcrypt/include.am $(srcdir)/cyassl/include.am $(srcdir)/cyassl/ctaocrypt/include.am $(srcdir)/cyassl/openssl/include.am $(srcdir)/wolfssl/include.am $(srcdir)/wolfssl/wolfcrypt/include.am $(srcdir)/wolfssl/openssl/include.am $(srcdir)/certs/include.am $(srcdir)/certs/test-pathlen/include.am $(srcdir)/certs/1024/include.am $(srcdir)/certs/crl/include.am $(srcdir)/certs/external/include.am $(srcdir)/certs/ocsp/include.am $(srcdir)/doc/include.am $(srcdir)/swig/include.am $(srcdir)/src/include.am $(srcdir)/support/include.am $(srcdir)/wolfcrypt/user-crypto/include.am $(srcdir)/wolfcrypt/benchmark/include.am $(srcdir)/wolfcrypt/src/include.am $(srcdir)/wolfcrypt/test/include.am $(srcdir)/examples/include.am $(srcdir)/examples/client/include.am $(srcdir)/examples/echoclient/include.am $(srcdir)/examples/echoserver/include.am $(srcdir)/examples/server/include.am $(srcdir)/examples/sctp/include.am $(srcdir)/testsuite/include.am $(srcdir)/tests/include.am $(srcdir)/sslSniffer/sslSnifferTest/include.am $(srcdir)/rpm/include.am $(srcdir)/mqx/util_lib/Sources/include.am $(srcdir)/mqx/wolfcrypt_benchmark/Sources/include.am $(srcdir)/mqx/wolfcrypt_test/Sources/include.am $(srcdir)/mqx/wolfssl/include.am $(srcdir)/mqx/wolfssl_client/Sources/include.am $(srcdir)/mplabx/include.am $(srcdir)/mplabx/wolfcrypt_benchmark.X/nbproject/include.am $(srcdir)/mplabx/wolfcrypt_test.X/nbproject/include.am $(srcdir)/mplabx/wolfssl.X/nbproject/include.am $(srcdir)/mcapi/include.am $(srcdir)/mcapi/wolfcrypt_mcapi.X/nbproject/include.am $(srcdir)/mcapi/wolfcrypt_test.X/nbproject/include.am $(srcdir)/mcapi/wolfssl.X/nbproject/include.am $(srcdir)/mcapi/zlib.X/nbproject/include.am $(srcdir)/tirtos/include.am $(srcdir)/IDE/include.am $(srcdir)/IDE/iOS/include.am $(srcdir)/IDE/WIN/include.am $(srcdir)/IDE/WIN-SGX/include.am $(srcdir)/IDE/WORKBENCH/include.am $(srcdir)/IDE/ROWLEY-CROSSWORKS-ARM/include.am $(srcdir)/IDE/ARDUINO/include.am $(srcdir)/scripts/include.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
stamp-h: $(top_builddir)/config.status $(srcdir)/stamp-h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
wolfssl/version.h: $(top_builddir)/config.status $(top_srcdir)/wolfssl/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
wolfssl/options.h: $(top_builddir)/config.status $(top_srcdir)/wolfssl/options.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
support/wolfssl.pc: $(top_builddir)/config.status $(top_srcdir)/support/wolfssl.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
rpm/spec: $(top_builddir)/config.status $(top_srcdir)/rpm/spec.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
ctaocrypt/src/$(am__dirstamp):
	@$(MKDIR_P) ctaocrypt/src
	@: > ctaocrypt/src/$(am__dirstamp)
ctaocrypt/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ctaocrypt/src/$(DEPDIR)
	@: > ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-hmac.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-random.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-sha256.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-rsa.lo: ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-aes.lo: ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-des3.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-sha.lo: ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-sha512.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-fips.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-fips_test.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.lo:  \
	ctaocrypt/src/$(am__dirstamp) \
	ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/src
	@: > wolfcrypt/src/$(am__dirstamp)
wolfcrypt/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/src/$(DEPDIR)
	@: > wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-hmac.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-hash.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-random.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/port/arm/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/src/port/arm
	@: > wolfcrypt/src/port/arm/$(am__dirstamp)
wolfcrypt/src/port/arm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/src/port/arm/$(DEPDIR)
	@: > wolfcrypt/src/port/arm/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.lo:  \
	wolfcrypt/src/port/arm/$(am__dirstamp) \
	wolfcrypt/src/port/arm/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-sha256.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-wolfevent.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-async.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/user-crypto/src/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/user-crypto/src
	@: > wolfcrypt/user-crypto/src/$(am__dirstamp)
wolfcrypt/user-crypto/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/user-crypto/src/$(DEPDIR)
	@: > wolfcrypt/user-crypto/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.lo:  \
	wolfcrypt/user-crypto/src/$(am__dirstamp) \
	wolfcrypt/user-crypto/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-rsa.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.lo:  \
	wolfcrypt/src/port/arm/$(am__dirstamp) \
	wolfcrypt/src/port/arm/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-aes.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-cmac.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-des3.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-sha.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-sha512.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-logging.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-wc_encrypt.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-wc_port.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-error.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-signature.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-wolfmath.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-memory.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-dh.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-asn.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-coding.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-poly1305.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-arc4.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-md4.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-md5.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-pwdbased.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-pkcs12.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-dsa.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/aes_asm.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-camellia.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-md2.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-ripemd.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-blake2b.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-hc128.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-rabbit.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-chacha.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-misc.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-tfm.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-integer.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-ecc.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-curve25519.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-ed25519.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-fe_low_mem.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-fe_operations.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-ge_low_mem.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-ge_operations.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-compress.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-pkcs7.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-srp.lo: wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/src_libwolfssl_la-idea.lo:  \
	wolfcrypt/src/$(am__dirstamp) \
	wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/src_libwolfssl_la-internal.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libwolfssl_la-io.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libwolfssl_la-keys.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libwolfssl_la-ssl.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libwolfssl_la-tls.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libwolfssl_la-ocsp.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libwolfssl_la-crl.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_libwolfssl_la-sniffer.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/port/cavium/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/src/port/cavium
	@: > wolfcrypt/src/port/cavium/$(am__dirstamp)
wolfcrypt/src/port/cavium/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/src/port/cavium/$(DEPDIR)
	@: > wolfcrypt/src/port/cavium/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.lo:  \
	wolfcrypt/src/port/cavium/$(am__dirstamp) \
	wolfcrypt/src/port/cavium/$(DEPDIR)/$(am__dirstamp)
src/libwolfssl.la: $(src_libwolfssl_la_OBJECTS) $(src_libwolfssl_la_DEPENDENCIES) src/$(am__dirstamp)
	$(AM_V_CCLD)$(src_libwolfssl_la_LINK) -rpath $(libdir) $(src_libwolfssl_la_OBJECTS) $(src_libwolfssl_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
examples/client/$(am__dirstamp):
	@$(MKDIR_P) examples/client
	@: > examples/client/$(am__dirstamp)
examples/client/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/client/$(DEPDIR)
	@: > examples/client/$(DEPDIR)/$(am__dirstamp)
examples/client/client.$(OBJEXT): examples/client/$(am__dirstamp) \
	examples/client/$(DEPDIR)/$(am__dirstamp)
examples/client/client$(EXEEXT): $(examples_client_client_OBJECTS) $(examples_client_client_DEPENDENCIES) examples/client/$(am__dirstamp)
	@rm -f examples/client/client$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_client_client_OBJECTS) $(examples_client_client_LDADD) $(LIBS)
examples/echoclient/$(am__dirstamp):
	@$(MKDIR_P) examples/echoclient
	@: > examples/echoclient/$(am__dirstamp)
examples/echoclient/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/echoclient/$(DEPDIR)
	@: > examples/echoclient/$(DEPDIR)/$(am__dirstamp)
examples/echoclient/echoclient.$(OBJEXT):  \
	examples/echoclient/$(am__dirstamp) \
	examples/echoclient/$(DEPDIR)/$(am__dirstamp)
examples/echoclient/echoclient$(EXEEXT): $(examples_echoclient_echoclient_OBJECTS) $(examples_echoclient_echoclient_DEPENDENCIES) examples/echoclient/$(am__dirstamp)
	@rm -f examples/echoclient/echoclient$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_echoclient_echoclient_OBJECTS) $(examples_echoclient_echoclient_LDADD) $(LIBS)
examples/echoserver/$(am__dirstamp):
	@$(MKDIR_P) examples/echoserver
	@: > examples/echoserver/$(am__dirstamp)
examples/echoserver/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/echoserver/$(DEPDIR)
	@: > examples/echoserver/$(DEPDIR)/$(am__dirstamp)
examples/echoserver/echoserver.$(OBJEXT):  \
	examples/echoserver/$(am__dirstamp) \
	examples/echoserver/$(DEPDIR)/$(am__dirstamp)
examples/echoserver/echoserver$(EXEEXT): $(examples_echoserver_echoserver_OBJECTS) $(examples_echoserver_echoserver_DEPENDENCIES) examples/echoserver/$(am__dirstamp)
	@rm -f examples/echoserver/echoserver$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_echoserver_echoserver_OBJECTS) $(examples_echoserver_echoserver_LDADD) $(LIBS)
examples/sctp/$(am__dirstamp):
	@$(MKDIR_P) examples/sctp
	@: > examples/sctp/$(am__dirstamp)
examples/sctp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/sctp/$(DEPDIR)
	@: > examples/sctp/$(DEPDIR)/$(am__dirstamp)
examples/sctp/sctp-client.$(OBJEXT): examples/sctp/$(am__dirstamp) \
	examples/sctp/$(DEPDIR)/$(am__dirstamp)
examples/sctp/sctp-client$(EXEEXT): $(examples_sctp_sctp_client_OBJECTS) $(examples_sctp_sctp_client_DEPENDENCIES) examples/sctp/$(am__dirstamp)
	@rm -f examples/sctp/sctp-client$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_sctp_sctp_client_OBJECTS) $(examples_sctp_sctp_client_LDADD) $(LIBS)
examples/sctp/sctp-client-dtls.$(OBJEXT):  \
	examples/sctp/$(am__dirstamp) \
	examples/sctp/$(DEPDIR)/$(am__dirstamp)
examples/sctp/sctp-client-dtls$(EXEEXT): $(examples_sctp_sctp_client_dtls_OBJECTS) $(examples_sctp_sctp_client_dtls_DEPENDENCIES) examples/sctp/$(am__dirstamp)
	@rm -f examples/sctp/sctp-client-dtls$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_sctp_sctp_client_dtls_OBJECTS) $(examples_sctp_sctp_client_dtls_LDADD) $(LIBS)
examples/sctp/sctp-server.$(OBJEXT): examples/sctp/$(am__dirstamp) \
	examples/sctp/$(DEPDIR)/$(am__dirstamp)
examples/sctp/sctp-server$(EXEEXT): $(examples_sctp_sctp_server_OBJECTS) $(examples_sctp_sctp_server_DEPENDENCIES) examples/sctp/$(am__dirstamp)
	@rm -f examples/sctp/sctp-server$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_sctp_sctp_server_OBJECTS) $(examples_sctp_sctp_server_LDADD) $(LIBS)
examples/sctp/sctp-server-dtls.$(OBJEXT):  \
	examples/sctp/$(am__dirstamp) \
	examples/sctp/$(DEPDIR)/$(am__dirstamp)
examples/sctp/sctp-server-dtls$(EXEEXT): $(examples_sctp_sctp_server_dtls_OBJECTS) $(examples_sctp_sctp_server_dtls_DEPENDENCIES) examples/sctp/$(am__dirstamp)
	@rm -f examples/sctp/sctp-server-dtls$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_sctp_sctp_server_dtls_OBJECTS) $(examples_sctp_sctp_server_dtls_LDADD) $(LIBS)
examples/server/$(am__dirstamp):
	@$(MKDIR_P) examples/server
	@: > examples/server/$(am__dirstamp)
examples/server/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/server/$(DEPDIR)
	@: > examples/server/$(DEPDIR)/$(am__dirstamp)
examples/server/server.$(OBJEXT): examples/server/$(am__dirstamp) \
	examples/server/$(DEPDIR)/$(am__dirstamp)
examples/server/server$(EXEEXT): $(examples_server_server_OBJECTS) $(examples_server_server_DEPENDENCIES) examples/server/$(am__dirstamp)
	@rm -f examples/server/server$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(examples_server_server_OBJECTS) $(examples_server_server_LDADD) $(LIBS)
mcapi/$(am__dirstamp):
	@$(MKDIR_P) mcapi
	@: > mcapi/$(am__dirstamp)
mcapi/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) mcapi/$(DEPDIR)
	@: > mcapi/$(DEPDIR)/$(am__dirstamp)
mcapi/crypto.$(OBJEXT): mcapi/$(am__dirstamp) \
	mcapi/$(DEPDIR)/$(am__dirstamp)
mcapi/mcapi_test.$(OBJEXT): mcapi/$(am__dirstamp) \
	mcapi/$(DEPDIR)/$(am__dirstamp)
mcapi/test$(EXEEXT): $(mcapi_test_OBJECTS) $(mcapi_test_DEPENDENCIES) mcapi/$(am__dirstamp)
	@rm -f mcapi/test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mcapi_test_OBJECTS) $(mcapi_test_LDADD) $(LIBS)
sslSniffer/sslSnifferTest/$(am__dirstamp):
	@$(MKDIR_P) sslSniffer/sslSnifferTest
	@: > sslSniffer/sslSnifferTest/$(am__dirstamp)
sslSniffer/sslSnifferTest/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sslSniffer/sslSnifferTest/$(DEPDIR)
	@: > sslSniffer/sslSnifferTest/$(DEPDIR)/$(am__dirstamp)
sslSniffer/sslSnifferTest/snifftest.$(OBJEXT):  \
	sslSniffer/sslSnifferTest/$(am__dirstamp) \
	sslSniffer/sslSnifferTest/$(DEPDIR)/$(am__dirstamp)
sslSniffer/sslSnifferTest/snifftest$(EXEEXT): $(sslSniffer_sslSnifferTest_snifftest_OBJECTS) $(sslSniffer_sslSnifferTest_snifftest_DEPENDENCIES) sslSniffer/sslSnifferTest/$(am__dirstamp)
	@rm -f sslSniffer/sslSnifferTest/snifftest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sslSniffer_sslSnifferTest_snifftest_OBJECTS) $(sslSniffer_sslSnifferTest_snifftest_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_unit_test-unit.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_unit_test-api.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_unit_test-suites.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_unit_test-hash.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_unit_test-srp.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
examples/client/tests_unit_test-client.$(OBJEXT):  \
	examples/client/$(am__dirstamp) \
	examples/client/$(DEPDIR)/$(am__dirstamp)
examples/server/tests_unit_test-server.$(OBJEXT):  \
	examples/server/$(am__dirstamp) \
	examples/server/$(DEPDIR)/$(am__dirstamp)
tests/unit.test$(EXEEXT): $(tests_unit_test_OBJECTS) $(tests_unit_test_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/unit.test$(EXEEXT)
	$(AM_V_CCLD)$(tests_unit_test_LINK) $(tests_unit_test_OBJECTS) $(tests_unit_test_LDADD) $(LIBS)
wolfcrypt/test/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/test
	@: > wolfcrypt/test/$(am__dirstamp)
wolfcrypt/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/test/$(DEPDIR)
	@: > wolfcrypt/test/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/test/testsuite_testsuite_test-test.$(OBJEXT):  \
	wolfcrypt/test/$(am__dirstamp) \
	wolfcrypt/test/$(DEPDIR)/$(am__dirstamp)
examples/client/testsuite_testsuite_test-client.$(OBJEXT):  \
	examples/client/$(am__dirstamp) \
	examples/client/$(DEPDIR)/$(am__dirstamp)
examples/echoclient/testsuite_testsuite_test-echoclient.$(OBJEXT):  \
	examples/echoclient/$(am__dirstamp) \
	examples/echoclient/$(DEPDIR)/$(am__dirstamp)
examples/echoserver/testsuite_testsuite_test-echoserver.$(OBJEXT):  \
	examples/echoserver/$(am__dirstamp) \
	examples/echoserver/$(DEPDIR)/$(am__dirstamp)
examples/server/testsuite_testsuite_test-server.$(OBJEXT):  \
	examples/server/$(am__dirstamp) \
	examples/server/$(DEPDIR)/$(am__dirstamp)
testsuite/$(am__dirstamp):
	@$(MKDIR_P) testsuite
	@: > testsuite/$(am__dirstamp)
testsuite/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) testsuite/$(DEPDIR)
	@: > testsuite/$(DEPDIR)/$(am__dirstamp)
testsuite/testsuite_testsuite_test-testsuite.$(OBJEXT):  \
	testsuite/$(am__dirstamp) testsuite/$(DEPDIR)/$(am__dirstamp)
testsuite/testsuite.test$(EXEEXT): $(testsuite_testsuite_test_OBJECTS) $(testsuite_testsuite_test_DEPENDENCIES) testsuite/$(am__dirstamp)
	@rm -f testsuite/testsuite.test$(EXEEXT)
	$(AM_V_CCLD)$(testsuite_testsuite_test_LINK) $(testsuite_testsuite_test_OBJECTS) $(testsuite_testsuite_test_LDADD) $(LIBS)
wolfcrypt/benchmark/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/benchmark
	@: > wolfcrypt/benchmark/$(am__dirstamp)
wolfcrypt/benchmark/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wolfcrypt/benchmark/$(DEPDIR)
	@: > wolfcrypt/benchmark/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/benchmark/benchmark.$(OBJEXT):  \
	wolfcrypt/benchmark/$(am__dirstamp) \
	wolfcrypt/benchmark/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/benchmark/benchmark$(EXEEXT): $(wolfcrypt_benchmark_benchmark_OBJECTS) $(wolfcrypt_benchmark_benchmark_DEPENDENCIES) wolfcrypt/benchmark/$(am__dirstamp)
	@rm -f wolfcrypt/benchmark/benchmark$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wolfcrypt_benchmark_benchmark_OBJECTS) $(wolfcrypt_benchmark_benchmark_LDADD) $(LIBS)
wolfcrypt/test/test.$(OBJEXT): wolfcrypt/test/$(am__dirstamp) \
	wolfcrypt/test/$(DEPDIR)/$(am__dirstamp)
wolfcrypt/test/testwolfcrypt$(EXEEXT): $(wolfcrypt_test_testwolfcrypt_OBJECTS) $(wolfcrypt_test_testwolfcrypt_DEPENDENCIES) wolfcrypt/test/$(am__dirstamp)
	@rm -f wolfcrypt/test/testwolfcrypt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(wolfcrypt_test_testwolfcrypt_OBJECTS) $(wolfcrypt_test_testwolfcrypt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-aes.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-aes.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-des3.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-des3.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-fips.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-fips.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-fips_test.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-fips_test.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-hmac.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-hmac.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-random.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-random.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-rsa.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-rsa.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-sha.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-sha.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-sha256.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-sha256.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-sha512.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-sha512.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.lo
	-rm -f ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.$(OBJEXT)
	-rm -f ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.lo
	-rm -f examples/client/client.$(OBJEXT)
	-rm -f examples/client/tests_unit_test-client.$(OBJEXT)
	-rm -f examples/client/testsuite_testsuite_test-client.$(OBJEXT)
	-rm -f examples/echoclient/echoclient.$(OBJEXT)
	-rm -f examples/echoclient/testsuite_testsuite_test-echoclient.$(OBJEXT)
	-rm -f examples/echoserver/echoserver.$(OBJEXT)
	-rm -f examples/echoserver/testsuite_testsuite_test-echoserver.$(OBJEXT)
	-rm -f examples/sctp/sctp-client-dtls.$(OBJEXT)
	-rm -f examples/sctp/sctp-client.$(OBJEXT)
	-rm -f examples/sctp/sctp-server-dtls.$(OBJEXT)
	-rm -f examples/sctp/sctp-server.$(OBJEXT)
	-rm -f examples/server/server.$(OBJEXT)
	-rm -f examples/server/tests_unit_test-server.$(OBJEXT)
	-rm -f examples/server/testsuite_testsuite_test-server.$(OBJEXT)
	-rm -f mcapi/crypto.$(OBJEXT)
	-rm -f mcapi/mcapi_test.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-crl.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-crl.lo
	-rm -f src/src_libwolfssl_la-internal.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-internal.lo
	-rm -f src/src_libwolfssl_la-io.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-io.lo
	-rm -f src/src_libwolfssl_la-keys.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-keys.lo
	-rm -f src/src_libwolfssl_la-ocsp.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-ocsp.lo
	-rm -f src/src_libwolfssl_la-sniffer.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-sniffer.lo
	-rm -f src/src_libwolfssl_la-ssl.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-ssl.lo
	-rm -f src/src_libwolfssl_la-tls.$(OBJEXT)
	-rm -f src/src_libwolfssl_la-tls.lo
	-rm -f sslSniffer/sslSnifferTest/snifftest.$(OBJEXT)
	-rm -f tests/tests_unit_test-api.$(OBJEXT)
	-rm -f tests/tests_unit_test-hash.$(OBJEXT)
	-rm -f tests/tests_unit_test-srp.$(OBJEXT)
	-rm -f tests/tests_unit_test-suites.$(OBJEXT)
	-rm -f tests/tests_unit_test-unit.$(OBJEXT)
	-rm -f testsuite/testsuite_testsuite_test-testsuite.$(OBJEXT)
	-rm -f wolfcrypt/benchmark/benchmark.$(OBJEXT)
	-rm -f wolfcrypt/src/aes_asm.$(OBJEXT)
	-rm -f wolfcrypt/src/aes_asm.lo
	-rm -f wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.$(OBJEXT)
	-rm -f wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.lo
	-rm -f wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.$(OBJEXT)
	-rm -f wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.lo
	-rm -f wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.$(OBJEXT)
	-rm -f wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-aes.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-aes.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-arc4.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-arc4.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-asn.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-asn.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-async.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-async.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-blake2b.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-blake2b.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-camellia.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-camellia.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-chacha.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-chacha.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-cmac.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-cmac.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-coding.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-coding.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-compress.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-compress.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-curve25519.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-curve25519.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-des3.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-des3.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-dh.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-dh.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-dsa.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-dsa.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-ecc.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-ecc.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-ed25519.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-ed25519.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-error.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-error.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-fe_low_mem.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-fe_low_mem.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-fe_operations.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-fe_operations.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-ge_low_mem.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-ge_low_mem.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-ge_operations.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-ge_operations.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-hash.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-hash.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-hc128.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-hc128.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-hmac.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-hmac.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-idea.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-idea.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-integer.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-integer.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-logging.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-logging.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-md2.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-md2.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-md4.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-md4.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-md5.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-md5.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-memory.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-memory.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-misc.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-misc.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-pkcs12.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-pkcs12.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-pkcs7.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-pkcs7.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-poly1305.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-poly1305.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-pwdbased.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-pwdbased.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-rabbit.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-rabbit.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-random.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-random.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-ripemd.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-ripemd.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-rsa.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-rsa.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-sha.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-sha.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-sha256.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-sha256.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-sha512.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-sha512.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-signature.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-signature.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-srp.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-srp.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-tfm.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-tfm.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-wc_encrypt.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-wc_encrypt.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-wc_port.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-wc_port.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-wolfevent.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-wolfevent.lo
	-rm -f wolfcrypt/src/src_libwolfssl_la-wolfmath.$(OBJEXT)
	-rm -f wolfcrypt/src/src_libwolfssl_la-wolfmath.lo
	-rm -f wolfcrypt/test/test.$(OBJEXT)
	-rm -f wolfcrypt/test/testsuite_testsuite_test-test.$(OBJEXT)
	-rm -f wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.$(OBJEXT)
	-rm -f wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.lo

distclean-compile:
	-rm -f *.tab.c

# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-aes.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-des3.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-fips.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-fips_test.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-hmac.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-random.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-rsa.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha256.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha512.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfcrypt_first.Plo
# ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfcrypt_last.Plo
# examples/client/$(DEPDIR)/client.Po
# examples/client/$(DEPDIR)/tests_unit_test-client.Po
# examples/client/$(DEPDIR)/testsuite_testsuite_test-client.Po
# examples/echoclient/$(DEPDIR)/echoclient.Po
# examples/echoclient/$(DEPDIR)/testsuite_testsuite_test-echoclient.Po
# examples/echoserver/$(DEPDIR)/echoserver.Po
# examples/echoserver/$(DEPDIR)/testsuite_testsuite_test-echoserver.Po
# examples/sctp/$(DEPDIR)/sctp-client-dtls.Po
# examples/sctp/$(DEPDIR)/sctp-client.Po
# examples/sctp/$(DEPDIR)/sctp-server-dtls.Po
# examples/sctp/$(DEPDIR)/sctp-server.Po
# examples/server/$(DEPDIR)/server.Po
# examples/server/$(DEPDIR)/tests_unit_test-server.Po
# examples/server/$(DEPDIR)/testsuite_testsuite_test-server.Po
# mcapi/$(DEPDIR)/crypto.Po
# mcapi/$(DEPDIR)/mcapi_test.Po
# src/$(DEPDIR)/src_libwolfssl_la-crl.Plo
# src/$(DEPDIR)/src_libwolfssl_la-internal.Plo
# src/$(DEPDIR)/src_libwolfssl_la-io.Plo
# src/$(DEPDIR)/src_libwolfssl_la-keys.Plo
# src/$(DEPDIR)/src_libwolfssl_la-ocsp.Plo
# src/$(DEPDIR)/src_libwolfssl_la-sniffer.Plo
# src/$(DEPDIR)/src_libwolfssl_la-ssl.Plo
# src/$(DEPDIR)/src_libwolfssl_la-tls.Plo
# sslSniffer/sslSnifferTest/$(DEPDIR)/snifftest.Po
# tests/$(DEPDIR)/tests_unit_test-api.Po
# tests/$(DEPDIR)/tests_unit_test-hash.Po
# tests/$(DEPDIR)/tests_unit_test-srp.Po
# tests/$(DEPDIR)/tests_unit_test-suites.Po
# tests/$(DEPDIR)/tests_unit_test-unit.Po
# testsuite/$(DEPDIR)/testsuite_testsuite_test-testsuite.Po
# wolfcrypt/benchmark/$(DEPDIR)/benchmark.Po
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-aes.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-arc4.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-asn.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-async.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-blake2b.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-camellia.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-chacha.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-chacha20_poly1305.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-cmac.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-coding.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-compress.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-curve25519.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-des3.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-dh.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-dsa.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ecc.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ed25519.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-error.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-fe_low_mem.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-fe_operations.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ge_low_mem.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ge_operations.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hash.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hc128.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hmac.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-idea.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-integer.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-logging.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md2.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md4.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md5.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-memory.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-misc.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pkcs12.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pkcs7.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-poly1305.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pwdbased.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-rabbit.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-random.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ripemd.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-rsa.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha256.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha512.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-signature.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-srp.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-tfm.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wc_encrypt.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wc_port.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfevent.Plo
# wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfmath.Plo
# wolfcrypt/src/port/arm/$(DEPDIR)/src_libwolfssl_la-armv8-aes.Plo
# wolfcrypt/src/port/arm/$(DEPDIR)/src_libwolfssl_la-armv8-sha256.Plo
# wolfcrypt/src/port/cavium/$(DEPDIR)/src_libwolfssl_la-cavium_nitrox.Plo
# wolfcrypt/test/$(DEPDIR)/test.Po
# wolfcrypt/test/$(DEPDIR)/testsuite_testsuite_test-test.Po
# wolfcrypt/user-crypto/src/$(DEPDIR)/src_libwolfssl_la-rsa.Plo

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
	$(AM_V_CC) \
	source='$<' object='$@' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
	$(AM_V_CC) \
	source='$<' object='$@' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
	$(AM_V_CC) \
	source='$<' object='$@' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ $<

ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.lo: ctaocrypt/src/wolfcrypt_first.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfcrypt_first.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.lo `test -f 'ctaocrypt/src/wolfcrypt_first.c' || echo '$(srcdir)/'`ctaocrypt/src/wolfcrypt_first.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfcrypt_first.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfcrypt_first.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/wolfcrypt_first.c' object='ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-wolfcrypt_first.lo `test -f 'ctaocrypt/src/wolfcrypt_first.c' || echo '$(srcdir)/'`ctaocrypt/src/wolfcrypt_first.c

ctaocrypt/src/src_libwolfssl_la-hmac.lo: ctaocrypt/src/hmac.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-hmac.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-hmac.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-hmac.lo `test -f 'ctaocrypt/src/hmac.c' || echo '$(srcdir)/'`ctaocrypt/src/hmac.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-hmac.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-hmac.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/hmac.c' object='ctaocrypt/src/src_libwolfssl_la-hmac.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-hmac.lo `test -f 'ctaocrypt/src/hmac.c' || echo '$(srcdir)/'`ctaocrypt/src/hmac.c

ctaocrypt/src/src_libwolfssl_la-random.lo: ctaocrypt/src/random.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-random.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-random.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-random.lo `test -f 'ctaocrypt/src/random.c' || echo '$(srcdir)/'`ctaocrypt/src/random.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-random.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-random.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/random.c' object='ctaocrypt/src/src_libwolfssl_la-random.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-random.lo `test -f 'ctaocrypt/src/random.c' || echo '$(srcdir)/'`ctaocrypt/src/random.c

ctaocrypt/src/src_libwolfssl_la-sha256.lo: ctaocrypt/src/sha256.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-sha256.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha256.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-sha256.lo `test -f 'ctaocrypt/src/sha256.c' || echo '$(srcdir)/'`ctaocrypt/src/sha256.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha256.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha256.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/sha256.c' object='ctaocrypt/src/src_libwolfssl_la-sha256.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-sha256.lo `test -f 'ctaocrypt/src/sha256.c' || echo '$(srcdir)/'`ctaocrypt/src/sha256.c

ctaocrypt/src/src_libwolfssl_la-rsa.lo: ctaocrypt/src/rsa.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-rsa.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-rsa.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-rsa.lo `test -f 'ctaocrypt/src/rsa.c' || echo '$(srcdir)/'`ctaocrypt/src/rsa.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-rsa.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-rsa.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/rsa.c' object='ctaocrypt/src/src_libwolfssl_la-rsa.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-rsa.lo `test -f 'ctaocrypt/src/rsa.c' || echo '$(srcdir)/'`ctaocrypt/src/rsa.c

ctaocrypt/src/src_libwolfssl_la-aes.lo: ctaocrypt/src/aes.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-aes.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-aes.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-aes.lo `test -f 'ctaocrypt/src/aes.c' || echo '$(srcdir)/'`ctaocrypt/src/aes.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-aes.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-aes.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/aes.c' object='ctaocrypt/src/src_libwolfssl_la-aes.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-aes.lo `test -f 'ctaocrypt/src/aes.c' || echo '$(srcdir)/'`ctaocrypt/src/aes.c

ctaocrypt/src/src_libwolfssl_la-des3.lo: ctaocrypt/src/des3.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-des3.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-des3.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-des3.lo `test -f 'ctaocrypt/src/des3.c' || echo '$(srcdir)/'`ctaocrypt/src/des3.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-des3.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-des3.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/des3.c' object='ctaocrypt/src/src_libwolfssl_la-des3.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-des3.lo `test -f 'ctaocrypt/src/des3.c' || echo '$(srcdir)/'`ctaocrypt/src/des3.c

ctaocrypt/src/src_libwolfssl_la-sha.lo: ctaocrypt/src/sha.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-sha.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-sha.lo `test -f 'ctaocrypt/src/sha.c' || echo '$(srcdir)/'`ctaocrypt/src/sha.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/sha.c' object='ctaocrypt/src/src_libwolfssl_la-sha.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-sha.lo `test -f 'ctaocrypt/src/sha.c' || echo '$(srcdir)/'`ctaocrypt/src/sha.c

ctaocrypt/src/src_libwolfssl_la-sha512.lo: ctaocrypt/src/sha512.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-sha512.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha512.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-sha512.lo `test -f 'ctaocrypt/src/sha512.c' || echo '$(srcdir)/'`ctaocrypt/src/sha512.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha512.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-sha512.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/sha512.c' object='ctaocrypt/src/src_libwolfssl_la-sha512.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-sha512.lo `test -f 'ctaocrypt/src/sha512.c' || echo '$(srcdir)/'`ctaocrypt/src/sha512.c

ctaocrypt/src/src_libwolfssl_la-fips.lo: ctaocrypt/src/fips.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-fips.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-fips.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-fips.lo `test -f 'ctaocrypt/src/fips.c' || echo '$(srcdir)/'`ctaocrypt/src/fips.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-fips.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-fips.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/fips.c' object='ctaocrypt/src/src_libwolfssl_la-fips.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-fips.lo `test -f 'ctaocrypt/src/fips.c' || echo '$(srcdir)/'`ctaocrypt/src/fips.c

ctaocrypt/src/src_libwolfssl_la-fips_test.lo: ctaocrypt/src/fips_test.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-fips_test.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-fips_test.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-fips_test.lo `test -f 'ctaocrypt/src/fips_test.c' || echo '$(srcdir)/'`ctaocrypt/src/fips_test.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-fips_test.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-fips_test.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/fips_test.c' object='ctaocrypt/src/src_libwolfssl_la-fips_test.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-fips_test.lo `test -f 'ctaocrypt/src/fips_test.c' || echo '$(srcdir)/'`ctaocrypt/src/fips_test.c

ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.lo: ctaocrypt/src/wolfcrypt_last.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.lo -MD -MP -MF ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfcrypt_last.Tpo -c -o ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.lo `test -f 'ctaocrypt/src/wolfcrypt_last.c' || echo '$(srcdir)/'`ctaocrypt/src/wolfcrypt_last.c
#	$(AM_V_at)$(am__mv) ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfcrypt_last.Tpo ctaocrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfcrypt_last.Plo
	$(AM_V_CC) \
	source='ctaocrypt/src/wolfcrypt_last.c' object='ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o ctaocrypt/src/src_libwolfssl_la-wolfcrypt_last.lo `test -f 'ctaocrypt/src/wolfcrypt_last.c' || echo '$(srcdir)/'`ctaocrypt/src/wolfcrypt_last.c

wolfcrypt/src/src_libwolfssl_la-hmac.lo: wolfcrypt/src/hmac.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-hmac.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hmac.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-hmac.lo `test -f 'wolfcrypt/src/hmac.c' || echo '$(srcdir)/'`wolfcrypt/src/hmac.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hmac.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hmac.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/hmac.c' object='wolfcrypt/src/src_libwolfssl_la-hmac.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-hmac.lo `test -f 'wolfcrypt/src/hmac.c' || echo '$(srcdir)/'`wolfcrypt/src/hmac.c

wolfcrypt/src/src_libwolfssl_la-hash.lo: wolfcrypt/src/hash.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-hash.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hash.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-hash.lo `test -f 'wolfcrypt/src/hash.c' || echo '$(srcdir)/'`wolfcrypt/src/hash.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hash.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hash.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/hash.c' object='wolfcrypt/src/src_libwolfssl_la-hash.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-hash.lo `test -f 'wolfcrypt/src/hash.c' || echo '$(srcdir)/'`wolfcrypt/src/hash.c

wolfcrypt/src/src_libwolfssl_la-random.lo: wolfcrypt/src/random.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-random.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-random.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-random.lo `test -f 'wolfcrypt/src/random.c' || echo '$(srcdir)/'`wolfcrypt/src/random.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-random.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-random.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/random.c' object='wolfcrypt/src/src_libwolfssl_la-random.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-random.lo `test -f 'wolfcrypt/src/random.c' || echo '$(srcdir)/'`wolfcrypt/src/random.c

wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.lo: wolfcrypt/src/port/arm/armv8-sha256.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.lo -MD -MP -MF wolfcrypt/src/port/arm/$(DEPDIR)/src_libwolfssl_la-armv8-sha256.Tpo -c -o wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.lo `test -f 'wolfcrypt/src/port/arm/armv8-sha256.c' || echo '$(srcdir)/'`wolfcrypt/src/port/arm/armv8-sha256.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/port/arm/$(DEPDIR)/src_libwolfssl_la-armv8-sha256.Tpo wolfcrypt/src/port/arm/$(DEPDIR)/src_libwolfssl_la-armv8-sha256.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/port/arm/armv8-sha256.c' object='wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-sha256.lo `test -f 'wolfcrypt/src/port/arm/armv8-sha256.c' || echo '$(srcdir)/'`wolfcrypt/src/port/arm/armv8-sha256.c

wolfcrypt/src/src_libwolfssl_la-sha256.lo: wolfcrypt/src/sha256.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-sha256.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha256.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-sha256.lo `test -f 'wolfcrypt/src/sha256.c' || echo '$(srcdir)/'`wolfcrypt/src/sha256.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha256.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha256.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/sha256.c' object='wolfcrypt/src/src_libwolfssl_la-sha256.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-sha256.lo `test -f 'wolfcrypt/src/sha256.c' || echo '$(srcdir)/'`wolfcrypt/src/sha256.c

wolfcrypt/src/src_libwolfssl_la-wolfevent.lo: wolfcrypt/src/wolfevent.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-wolfevent.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfevent.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-wolfevent.lo `test -f 'wolfcrypt/src/wolfevent.c' || echo '$(srcdir)/'`wolfcrypt/src/wolfevent.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfevent.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfevent.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/wolfevent.c' object='wolfcrypt/src/src_libwolfssl_la-wolfevent.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-wolfevent.lo `test -f 'wolfcrypt/src/wolfevent.c' || echo '$(srcdir)/'`wolfcrypt/src/wolfevent.c

wolfcrypt/src/src_libwolfssl_la-async.lo: wolfcrypt/src/async.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-async.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-async.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-async.lo `test -f 'wolfcrypt/src/async.c' || echo '$(srcdir)/'`wolfcrypt/src/async.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-async.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-async.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/async.c' object='wolfcrypt/src/src_libwolfssl_la-async.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-async.lo `test -f 'wolfcrypt/src/async.c' || echo '$(srcdir)/'`wolfcrypt/src/async.c

wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.lo: wolfcrypt/user-crypto/src/rsa.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.lo -MD -MP -MF wolfcrypt/user-crypto/src/$(DEPDIR)/src_libwolfssl_la-rsa.Tpo -c -o wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.lo `test -f 'wolfcrypt/user-crypto/src/rsa.c' || echo '$(srcdir)/'`wolfcrypt/user-crypto/src/rsa.c
#	$(AM_V_at)$(am__mv) wolfcrypt/user-crypto/src/$(DEPDIR)/src_libwolfssl_la-rsa.Tpo wolfcrypt/user-crypto/src/$(DEPDIR)/src_libwolfssl_la-rsa.Plo
	$(AM_V_CC) \
	source='wolfcrypt/user-crypto/src/rsa.c' object='wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/user-crypto/src/src_libwolfssl_la-rsa.lo `test -f 'wolfcrypt/user-crypto/src/rsa.c' || echo '$(srcdir)/'`wolfcrypt/user-crypto/src/rsa.c

wolfcrypt/src/src_libwolfssl_la-rsa.lo: wolfcrypt/src/rsa.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-rsa.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-rsa.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-rsa.lo `test -f 'wolfcrypt/src/rsa.c' || echo '$(srcdir)/'`wolfcrypt/src/rsa.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-rsa.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-rsa.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/rsa.c' object='wolfcrypt/src/src_libwolfssl_la-rsa.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-rsa.lo `test -f 'wolfcrypt/src/rsa.c' || echo '$(srcdir)/'`wolfcrypt/src/rsa.c

wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.lo: wolfcrypt/src/port/arm/armv8-aes.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.lo -MD -MP -MF wolfcrypt/src/port/arm/$(DEPDIR)/src_libwolfssl_la-armv8-aes.Tpo -c -o wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.lo `test -f 'wolfcrypt/src/port/arm/armv8-aes.c' || echo '$(srcdir)/'`wolfcrypt/src/port/arm/armv8-aes.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/port/arm/$(DEPDIR)/src_libwolfssl_la-armv8-aes.Tpo wolfcrypt/src/port/arm/$(DEPDIR)/src_libwolfssl_la-armv8-aes.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/port/arm/armv8-aes.c' object='wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/port/arm/src_libwolfssl_la-armv8-aes.lo `test -f 'wolfcrypt/src/port/arm/armv8-aes.c' || echo '$(srcdir)/'`wolfcrypt/src/port/arm/armv8-aes.c

wolfcrypt/src/src_libwolfssl_la-aes.lo: wolfcrypt/src/aes.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-aes.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-aes.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-aes.lo `test -f 'wolfcrypt/src/aes.c' || echo '$(srcdir)/'`wolfcrypt/src/aes.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-aes.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-aes.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/aes.c' object='wolfcrypt/src/src_libwolfssl_la-aes.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-aes.lo `test -f 'wolfcrypt/src/aes.c' || echo '$(srcdir)/'`wolfcrypt/src/aes.c

wolfcrypt/src/src_libwolfssl_la-cmac.lo: wolfcrypt/src/cmac.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-cmac.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-cmac.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-cmac.lo `test -f 'wolfcrypt/src/cmac.c' || echo '$(srcdir)/'`wolfcrypt/src/cmac.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-cmac.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-cmac.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/cmac.c' object='wolfcrypt/src/src_libwolfssl_la-cmac.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-cmac.lo `test -f 'wolfcrypt/src/cmac.c' || echo '$(srcdir)/'`wolfcrypt/src/cmac.c

wolfcrypt/src/src_libwolfssl_la-des3.lo: wolfcrypt/src/des3.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-des3.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-des3.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-des3.lo `test -f 'wolfcrypt/src/des3.c' || echo '$(srcdir)/'`wolfcrypt/src/des3.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-des3.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-des3.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/des3.c' object='wolfcrypt/src/src_libwolfssl_la-des3.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-des3.lo `test -f 'wolfcrypt/src/des3.c' || echo '$(srcdir)/'`wolfcrypt/src/des3.c

wolfcrypt/src/src_libwolfssl_la-sha.lo: wolfcrypt/src/sha.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-sha.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-sha.lo `test -f 'wolfcrypt/src/sha.c' || echo '$(srcdir)/'`wolfcrypt/src/sha.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/sha.c' object='wolfcrypt/src/src_libwolfssl_la-sha.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-sha.lo `test -f 'wolfcrypt/src/sha.c' || echo '$(srcdir)/'`wolfcrypt/src/sha.c

wolfcrypt/src/src_libwolfssl_la-sha512.lo: wolfcrypt/src/sha512.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-sha512.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha512.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-sha512.lo `test -f 'wolfcrypt/src/sha512.c' || echo '$(srcdir)/'`wolfcrypt/src/sha512.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha512.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-sha512.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/sha512.c' object='wolfcrypt/src/src_libwolfssl_la-sha512.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-sha512.lo `test -f 'wolfcrypt/src/sha512.c' || echo '$(srcdir)/'`wolfcrypt/src/sha512.c

wolfcrypt/src/src_libwolfssl_la-logging.lo: wolfcrypt/src/logging.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-logging.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-logging.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-logging.lo `test -f 'wolfcrypt/src/logging.c' || echo '$(srcdir)/'`wolfcrypt/src/logging.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-logging.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-logging.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/logging.c' object='wolfcrypt/src/src_libwolfssl_la-logging.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-logging.lo `test -f 'wolfcrypt/src/logging.c' || echo '$(srcdir)/'`wolfcrypt/src/logging.c

wolfcrypt/src/src_libwolfssl_la-wc_encrypt.lo: wolfcrypt/src/wc_encrypt.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-wc_encrypt.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wc_encrypt.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-wc_encrypt.lo `test -f 'wolfcrypt/src/wc_encrypt.c' || echo '$(srcdir)/'`wolfcrypt/src/wc_encrypt.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wc_encrypt.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wc_encrypt.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/wc_encrypt.c' object='wolfcrypt/src/src_libwolfssl_la-wc_encrypt.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-wc_encrypt.lo `test -f 'wolfcrypt/src/wc_encrypt.c' || echo '$(srcdir)/'`wolfcrypt/src/wc_encrypt.c

wolfcrypt/src/src_libwolfssl_la-wc_port.lo: wolfcrypt/src/wc_port.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-wc_port.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wc_port.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-wc_port.lo `test -f 'wolfcrypt/src/wc_port.c' || echo '$(srcdir)/'`wolfcrypt/src/wc_port.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wc_port.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wc_port.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/wc_port.c' object='wolfcrypt/src/src_libwolfssl_la-wc_port.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-wc_port.lo `test -f 'wolfcrypt/src/wc_port.c' || echo '$(srcdir)/'`wolfcrypt/src/wc_port.c

wolfcrypt/src/src_libwolfssl_la-error.lo: wolfcrypt/src/error.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-error.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-error.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-error.lo `test -f 'wolfcrypt/src/error.c' || echo '$(srcdir)/'`wolfcrypt/src/error.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-error.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-error.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/error.c' object='wolfcrypt/src/src_libwolfssl_la-error.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-error.lo `test -f 'wolfcrypt/src/error.c' || echo '$(srcdir)/'`wolfcrypt/src/error.c

wolfcrypt/src/src_libwolfssl_la-signature.lo: wolfcrypt/src/signature.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-signature.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-signature.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-signature.lo `test -f 'wolfcrypt/src/signature.c' || echo '$(srcdir)/'`wolfcrypt/src/signature.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-signature.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-signature.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/signature.c' object='wolfcrypt/src/src_libwolfssl_la-signature.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-signature.lo `test -f 'wolfcrypt/src/signature.c' || echo '$(srcdir)/'`wolfcrypt/src/signature.c

wolfcrypt/src/src_libwolfssl_la-wolfmath.lo: wolfcrypt/src/wolfmath.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-wolfmath.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfmath.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-wolfmath.lo `test -f 'wolfcrypt/src/wolfmath.c' || echo '$(srcdir)/'`wolfcrypt/src/wolfmath.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfmath.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-wolfmath.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/wolfmath.c' object='wolfcrypt/src/src_libwolfssl_la-wolfmath.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-wolfmath.lo `test -f 'wolfcrypt/src/wolfmath.c' || echo '$(srcdir)/'`wolfcrypt/src/wolfmath.c

wolfcrypt/src/src_libwolfssl_la-memory.lo: wolfcrypt/src/memory.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-memory.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-memory.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-memory.lo `test -f 'wolfcrypt/src/memory.c' || echo '$(srcdir)/'`wolfcrypt/src/memory.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-memory.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-memory.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/memory.c' object='wolfcrypt/src/src_libwolfssl_la-memory.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-memory.lo `test -f 'wolfcrypt/src/memory.c' || echo '$(srcdir)/'`wolfcrypt/src/memory.c

wolfcrypt/src/src_libwolfssl_la-dh.lo: wolfcrypt/src/dh.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-dh.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-dh.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-dh.lo `test -f 'wolfcrypt/src/dh.c' || echo '$(srcdir)/'`wolfcrypt/src/dh.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-dh.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-dh.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/dh.c' object='wolfcrypt/src/src_libwolfssl_la-dh.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-dh.lo `test -f 'wolfcrypt/src/dh.c' || echo '$(srcdir)/'`wolfcrypt/src/dh.c

wolfcrypt/src/src_libwolfssl_la-asn.lo: wolfcrypt/src/asn.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-asn.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-asn.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-asn.lo `test -f 'wolfcrypt/src/asn.c' || echo '$(srcdir)/'`wolfcrypt/src/asn.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-asn.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-asn.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/asn.c' object='wolfcrypt/src/src_libwolfssl_la-asn.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-asn.lo `test -f 'wolfcrypt/src/asn.c' || echo '$(srcdir)/'`wolfcrypt/src/asn.c

wolfcrypt/src/src_libwolfssl_la-coding.lo: wolfcrypt/src/coding.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-coding.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-coding.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-coding.lo `test -f 'wolfcrypt/src/coding.c' || echo '$(srcdir)/'`wolfcrypt/src/coding.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-coding.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-coding.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/coding.c' object='wolfcrypt/src/src_libwolfssl_la-coding.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-coding.lo `test -f 'wolfcrypt/src/coding.c' || echo '$(srcdir)/'`wolfcrypt/src/coding.c

wolfcrypt/src/src_libwolfssl_la-poly1305.lo: wolfcrypt/src/poly1305.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-poly1305.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-poly1305.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-poly1305.lo `test -f 'wolfcrypt/src/poly1305.c' || echo '$(srcdir)/'`wolfcrypt/src/poly1305.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-poly1305.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-poly1305.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/poly1305.c' object='wolfcrypt/src/src_libwolfssl_la-poly1305.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-poly1305.lo `test -f 'wolfcrypt/src/poly1305.c' || echo '$(srcdir)/'`wolfcrypt/src/poly1305.c

wolfcrypt/src/src_libwolfssl_la-arc4.lo: wolfcrypt/src/arc4.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-arc4.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-arc4.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-arc4.lo `test -f 'wolfcrypt/src/arc4.c' || echo '$(srcdir)/'`wolfcrypt/src/arc4.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-arc4.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-arc4.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/arc4.c' object='wolfcrypt/src/src_libwolfssl_la-arc4.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-arc4.lo `test -f 'wolfcrypt/src/arc4.c' || echo '$(srcdir)/'`wolfcrypt/src/arc4.c

wolfcrypt/src/src_libwolfssl_la-md4.lo: wolfcrypt/src/md4.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-md4.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md4.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-md4.lo `test -f 'wolfcrypt/src/md4.c' || echo '$(srcdir)/'`wolfcrypt/src/md4.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md4.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md4.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/md4.c' object='wolfcrypt/src/src_libwolfssl_la-md4.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-md4.lo `test -f 'wolfcrypt/src/md4.c' || echo '$(srcdir)/'`wolfcrypt/src/md4.c

wolfcrypt/src/src_libwolfssl_la-md5.lo: wolfcrypt/src/md5.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-md5.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md5.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-md5.lo `test -f 'wolfcrypt/src/md5.c' || echo '$(srcdir)/'`wolfcrypt/src/md5.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md5.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md5.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/md5.c' object='wolfcrypt/src/src_libwolfssl_la-md5.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-md5.lo `test -f 'wolfcrypt/src/md5.c' || echo '$(srcdir)/'`wolfcrypt/src/md5.c

wolfcrypt/src/src_libwolfssl_la-pwdbased.lo: wolfcrypt/src/pwdbased.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-pwdbased.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pwdbased.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-pwdbased.lo `test -f 'wolfcrypt/src/pwdbased.c' || echo '$(srcdir)/'`wolfcrypt/src/pwdbased.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pwdbased.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pwdbased.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/pwdbased.c' object='wolfcrypt/src/src_libwolfssl_la-pwdbased.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-pwdbased.lo `test -f 'wolfcrypt/src/pwdbased.c' || echo '$(srcdir)/'`wolfcrypt/src/pwdbased.c

wolfcrypt/src/src_libwolfssl_la-pkcs12.lo: wolfcrypt/src/pkcs12.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-pkcs12.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pkcs12.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-pkcs12.lo `test -f 'wolfcrypt/src/pkcs12.c' || echo '$(srcdir)/'`wolfcrypt/src/pkcs12.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pkcs12.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pkcs12.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/pkcs12.c' object='wolfcrypt/src/src_libwolfssl_la-pkcs12.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-pkcs12.lo `test -f 'wolfcrypt/src/pkcs12.c' || echo '$(srcdir)/'`wolfcrypt/src/pkcs12.c

wolfcrypt/src/src_libwolfssl_la-dsa.lo: wolfcrypt/src/dsa.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-dsa.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-dsa.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-dsa.lo `test -f 'wolfcrypt/src/dsa.c' || echo '$(srcdir)/'`wolfcrypt/src/dsa.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-dsa.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-dsa.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/dsa.c' object='wolfcrypt/src/src_libwolfssl_la-dsa.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-dsa.lo `test -f 'wolfcrypt/src/dsa.c' || echo '$(srcdir)/'`wolfcrypt/src/dsa.c

wolfcrypt/src/src_libwolfssl_la-camellia.lo: wolfcrypt/src/camellia.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-camellia.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-camellia.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-camellia.lo `test -f 'wolfcrypt/src/camellia.c' || echo '$(srcdir)/'`wolfcrypt/src/camellia.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-camellia.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-camellia.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/camellia.c' object='wolfcrypt/src/src_libwolfssl_la-camellia.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-camellia.lo `test -f 'wolfcrypt/src/camellia.c' || echo '$(srcdir)/'`wolfcrypt/src/camellia.c

wolfcrypt/src/src_libwolfssl_la-md2.lo: wolfcrypt/src/md2.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-md2.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md2.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-md2.lo `test -f 'wolfcrypt/src/md2.c' || echo '$(srcdir)/'`wolfcrypt/src/md2.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md2.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-md2.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/md2.c' object='wolfcrypt/src/src_libwolfssl_la-md2.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-md2.lo `test -f 'wolfcrypt/src/md2.c' || echo '$(srcdir)/'`wolfcrypt/src/md2.c

wolfcrypt/src/src_libwolfssl_la-ripemd.lo: wolfcrypt/src/ripemd.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-ripemd.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ripemd.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-ripemd.lo `test -f 'wolfcrypt/src/ripemd.c' || echo '$(srcdir)/'`wolfcrypt/src/ripemd.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ripemd.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ripemd.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/ripemd.c' object='wolfcrypt/src/src_libwolfssl_la-ripemd.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-ripemd.lo `test -f 'wolfcrypt/src/ripemd.c' || echo '$(srcdir)/'`wolfcrypt/src/ripemd.c

wolfcrypt/src/src_libwolfssl_la-blake2b.lo: wolfcrypt/src/blake2b.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-blake2b.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-blake2b.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-blake2b.lo `test -f 'wolfcrypt/src/blake2b.c' || echo '$(srcdir)/'`wolfcrypt/src/blake2b.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-blake2b.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-blake2b.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/blake2b.c' object='wolfcrypt/src/src_libwolfssl_la-blake2b.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-blake2b.lo `test -f 'wolfcrypt/src/blake2b.c' || echo '$(srcdir)/'`wolfcrypt/src/blake2b.c

wolfcrypt/src/src_libwolfssl_la-hc128.lo: wolfcrypt/src/hc128.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-hc128.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hc128.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-hc128.lo `test -f 'wolfcrypt/src/hc128.c' || echo '$(srcdir)/'`wolfcrypt/src/hc128.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hc128.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-hc128.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/hc128.c' object='wolfcrypt/src/src_libwolfssl_la-hc128.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-hc128.lo `test -f 'wolfcrypt/src/hc128.c' || echo '$(srcdir)/'`wolfcrypt/src/hc128.c

wolfcrypt/src/src_libwolfssl_la-rabbit.lo: wolfcrypt/src/rabbit.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-rabbit.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-rabbit.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-rabbit.lo `test -f 'wolfcrypt/src/rabbit.c' || echo '$(srcdir)/'`wolfcrypt/src/rabbit.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-rabbit.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-rabbit.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/rabbit.c' object='wolfcrypt/src/src_libwolfssl_la-rabbit.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-rabbit.lo `test -f 'wolfcrypt/src/rabbit.c' || echo '$(srcdir)/'`wolfcrypt/src/rabbit.c

wolfcrypt/src/src_libwolfssl_la-chacha.lo: wolfcrypt/src/chacha.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-chacha.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-chacha.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-chacha.lo `test -f 'wolfcrypt/src/chacha.c' || echo '$(srcdir)/'`wolfcrypt/src/chacha.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-chacha.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-chacha.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/chacha.c' object='wolfcrypt/src/src_libwolfssl_la-chacha.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-chacha.lo `test -f 'wolfcrypt/src/chacha.c' || echo '$(srcdir)/'`wolfcrypt/src/chacha.c

wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.lo: wolfcrypt/src/chacha20_poly1305.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-chacha20_poly1305.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.lo `test -f 'wolfcrypt/src/chacha20_poly1305.c' || echo '$(srcdir)/'`wolfcrypt/src/chacha20_poly1305.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-chacha20_poly1305.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-chacha20_poly1305.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/chacha20_poly1305.c' object='wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-chacha20_poly1305.lo `test -f 'wolfcrypt/src/chacha20_poly1305.c' || echo '$(srcdir)/'`wolfcrypt/src/chacha20_poly1305.c

wolfcrypt/src/src_libwolfssl_la-misc.lo: wolfcrypt/src/misc.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-misc.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-misc.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-misc.lo `test -f 'wolfcrypt/src/misc.c' || echo '$(srcdir)/'`wolfcrypt/src/misc.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-misc.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-misc.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/misc.c' object='wolfcrypt/src/src_libwolfssl_la-misc.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-misc.lo `test -f 'wolfcrypt/src/misc.c' || echo '$(srcdir)/'`wolfcrypt/src/misc.c

wolfcrypt/src/src_libwolfssl_la-tfm.lo: wolfcrypt/src/tfm.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-tfm.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-tfm.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-tfm.lo `test -f 'wolfcrypt/src/tfm.c' || echo '$(srcdir)/'`wolfcrypt/src/tfm.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-tfm.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-tfm.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/tfm.c' object='wolfcrypt/src/src_libwolfssl_la-tfm.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-tfm.lo `test -f 'wolfcrypt/src/tfm.c' || echo '$(srcdir)/'`wolfcrypt/src/tfm.c

wolfcrypt/src/src_libwolfssl_la-integer.lo: wolfcrypt/src/integer.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-integer.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-integer.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-integer.lo `test -f 'wolfcrypt/src/integer.c' || echo '$(srcdir)/'`wolfcrypt/src/integer.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-integer.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-integer.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/integer.c' object='wolfcrypt/src/src_libwolfssl_la-integer.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-integer.lo `test -f 'wolfcrypt/src/integer.c' || echo '$(srcdir)/'`wolfcrypt/src/integer.c

wolfcrypt/src/src_libwolfssl_la-ecc.lo: wolfcrypt/src/ecc.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-ecc.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ecc.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-ecc.lo `test -f 'wolfcrypt/src/ecc.c' || echo '$(srcdir)/'`wolfcrypt/src/ecc.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ecc.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ecc.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/ecc.c' object='wolfcrypt/src/src_libwolfssl_la-ecc.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-ecc.lo `test -f 'wolfcrypt/src/ecc.c' || echo '$(srcdir)/'`wolfcrypt/src/ecc.c

wolfcrypt/src/src_libwolfssl_la-curve25519.lo: wolfcrypt/src/curve25519.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-curve25519.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-curve25519.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-curve25519.lo `test -f 'wolfcrypt/src/curve25519.c' || echo '$(srcdir)/'`wolfcrypt/src/curve25519.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-curve25519.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-curve25519.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/curve25519.c' object='wolfcrypt/src/src_libwolfssl_la-curve25519.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-curve25519.lo `test -f 'wolfcrypt/src/curve25519.c' || echo '$(srcdir)/'`wolfcrypt/src/curve25519.c

wolfcrypt/src/src_libwolfssl_la-ed25519.lo: wolfcrypt/src/ed25519.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-ed25519.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ed25519.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-ed25519.lo `test -f 'wolfcrypt/src/ed25519.c' || echo '$(srcdir)/'`wolfcrypt/src/ed25519.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ed25519.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ed25519.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/ed25519.c' object='wolfcrypt/src/src_libwolfssl_la-ed25519.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-ed25519.lo `test -f 'wolfcrypt/src/ed25519.c' || echo '$(srcdir)/'`wolfcrypt/src/ed25519.c

wolfcrypt/src/src_libwolfssl_la-fe_low_mem.lo: wolfcrypt/src/fe_low_mem.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-fe_low_mem.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-fe_low_mem.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-fe_low_mem.lo `test -f 'wolfcrypt/src/fe_low_mem.c' || echo '$(srcdir)/'`wolfcrypt/src/fe_low_mem.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-fe_low_mem.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-fe_low_mem.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/fe_low_mem.c' object='wolfcrypt/src/src_libwolfssl_la-fe_low_mem.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-fe_low_mem.lo `test -f 'wolfcrypt/src/fe_low_mem.c' || echo '$(srcdir)/'`wolfcrypt/src/fe_low_mem.c

wolfcrypt/src/src_libwolfssl_la-fe_operations.lo: wolfcrypt/src/fe_operations.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-fe_operations.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-fe_operations.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-fe_operations.lo `test -f 'wolfcrypt/src/fe_operations.c' || echo '$(srcdir)/'`wolfcrypt/src/fe_operations.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-fe_operations.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-fe_operations.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/fe_operations.c' object='wolfcrypt/src/src_libwolfssl_la-fe_operations.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-fe_operations.lo `test -f 'wolfcrypt/src/fe_operations.c' || echo '$(srcdir)/'`wolfcrypt/src/fe_operations.c

wolfcrypt/src/src_libwolfssl_la-ge_low_mem.lo: wolfcrypt/src/ge_low_mem.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-ge_low_mem.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ge_low_mem.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-ge_low_mem.lo `test -f 'wolfcrypt/src/ge_low_mem.c' || echo '$(srcdir)/'`wolfcrypt/src/ge_low_mem.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ge_low_mem.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ge_low_mem.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/ge_low_mem.c' object='wolfcrypt/src/src_libwolfssl_la-ge_low_mem.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-ge_low_mem.lo `test -f 'wolfcrypt/src/ge_low_mem.c' || echo '$(srcdir)/'`wolfcrypt/src/ge_low_mem.c

wolfcrypt/src/src_libwolfssl_la-ge_operations.lo: wolfcrypt/src/ge_operations.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-ge_operations.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ge_operations.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-ge_operations.lo `test -f 'wolfcrypt/src/ge_operations.c' || echo '$(srcdir)/'`wolfcrypt/src/ge_operations.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ge_operations.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-ge_operations.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/ge_operations.c' object='wolfcrypt/src/src_libwolfssl_la-ge_operations.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-ge_operations.lo `test -f 'wolfcrypt/src/ge_operations.c' || echo '$(srcdir)/'`wolfcrypt/src/ge_operations.c

wolfcrypt/src/src_libwolfssl_la-compress.lo: wolfcrypt/src/compress.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-compress.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-compress.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-compress.lo `test -f 'wolfcrypt/src/compress.c' || echo '$(srcdir)/'`wolfcrypt/src/compress.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-compress.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-compress.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/compress.c' object='wolfcrypt/src/src_libwolfssl_la-compress.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-compress.lo `test -f 'wolfcrypt/src/compress.c' || echo '$(srcdir)/'`wolfcrypt/src/compress.c

wolfcrypt/src/src_libwolfssl_la-pkcs7.lo: wolfcrypt/src/pkcs7.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-pkcs7.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pkcs7.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-pkcs7.lo `test -f 'wolfcrypt/src/pkcs7.c' || echo '$(srcdir)/'`wolfcrypt/src/pkcs7.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pkcs7.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-pkcs7.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/pkcs7.c' object='wolfcrypt/src/src_libwolfssl_la-pkcs7.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-pkcs7.lo `test -f 'wolfcrypt/src/pkcs7.c' || echo '$(srcdir)/'`wolfcrypt/src/pkcs7.c

wolfcrypt/src/src_libwolfssl_la-srp.lo: wolfcrypt/src/srp.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-srp.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-srp.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-srp.lo `test -f 'wolfcrypt/src/srp.c' || echo '$(srcdir)/'`wolfcrypt/src/srp.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-srp.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-srp.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/srp.c' object='wolfcrypt/src/src_libwolfssl_la-srp.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-srp.lo `test -f 'wolfcrypt/src/srp.c' || echo '$(srcdir)/'`wolfcrypt/src/srp.c

wolfcrypt/src/src_libwolfssl_la-idea.lo: wolfcrypt/src/idea.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/src_libwolfssl_la-idea.lo -MD -MP -MF wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-idea.Tpo -c -o wolfcrypt/src/src_libwolfssl_la-idea.lo `test -f 'wolfcrypt/src/idea.c' || echo '$(srcdir)/'`wolfcrypt/src/idea.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-idea.Tpo wolfcrypt/src/$(DEPDIR)/src_libwolfssl_la-idea.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/idea.c' object='wolfcrypt/src/src_libwolfssl_la-idea.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/src_libwolfssl_la-idea.lo `test -f 'wolfcrypt/src/idea.c' || echo '$(srcdir)/'`wolfcrypt/src/idea.c

src/src_libwolfssl_la-internal.lo: src/internal.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT src/src_libwolfssl_la-internal.lo -MD -MP -MF src/$(DEPDIR)/src_libwolfssl_la-internal.Tpo -c -o src/src_libwolfssl_la-internal.lo `test -f 'src/internal.c' || echo '$(srcdir)/'`src/internal.c
#	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libwolfssl_la-internal.Tpo src/$(DEPDIR)/src_libwolfssl_la-internal.Plo
	$(AM_V_CC) \
	source='src/internal.c' object='src/src_libwolfssl_la-internal.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o src/src_libwolfssl_la-internal.lo `test -f 'src/internal.c' || echo '$(srcdir)/'`src/internal.c

src/src_libwolfssl_la-io.lo: src/io.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT src/src_libwolfssl_la-io.lo -MD -MP -MF src/$(DEPDIR)/src_libwolfssl_la-io.Tpo -c -o src/src_libwolfssl_la-io.lo `test -f 'src/io.c' || echo '$(srcdir)/'`src/io.c
#	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libwolfssl_la-io.Tpo src/$(DEPDIR)/src_libwolfssl_la-io.Plo
	$(AM_V_CC) \
	source='src/io.c' object='src/src_libwolfssl_la-io.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o src/src_libwolfssl_la-io.lo `test -f 'src/io.c' || echo '$(srcdir)/'`src/io.c

src/src_libwolfssl_la-keys.lo: src/keys.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT src/src_libwolfssl_la-keys.lo -MD -MP -MF src/$(DEPDIR)/src_libwolfssl_la-keys.Tpo -c -o src/src_libwolfssl_la-keys.lo `test -f 'src/keys.c' || echo '$(srcdir)/'`src/keys.c
#	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libwolfssl_la-keys.Tpo src/$(DEPDIR)/src_libwolfssl_la-keys.Plo
	$(AM_V_CC) \
	source='src/keys.c' object='src/src_libwolfssl_la-keys.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o src/src_libwolfssl_la-keys.lo `test -f 'src/keys.c' || echo '$(srcdir)/'`src/keys.c

src/src_libwolfssl_la-ssl.lo: src/ssl.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT src/src_libwolfssl_la-ssl.lo -MD -MP -MF src/$(DEPDIR)/src_libwolfssl_la-ssl.Tpo -c -o src/src_libwolfssl_la-ssl.lo `test -f 'src/ssl.c' || echo '$(srcdir)/'`src/ssl.c
#	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libwolfssl_la-ssl.Tpo src/$(DEPDIR)/src_libwolfssl_la-ssl.Plo
	$(AM_V_CC) \
	source='src/ssl.c' object='src/src_libwolfssl_la-ssl.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o src/src_libwolfssl_la-ssl.lo `test -f 'src/ssl.c' || echo '$(srcdir)/'`src/ssl.c

src/src_libwolfssl_la-tls.lo: src/tls.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT src/src_libwolfssl_la-tls.lo -MD -MP -MF src/$(DEPDIR)/src_libwolfssl_la-tls.Tpo -c -o src/src_libwolfssl_la-tls.lo `test -f 'src/tls.c' || echo '$(srcdir)/'`src/tls.c
#	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libwolfssl_la-tls.Tpo src/$(DEPDIR)/src_libwolfssl_la-tls.Plo
	$(AM_V_CC) \
	source='src/tls.c' object='src/src_libwolfssl_la-tls.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o src/src_libwolfssl_la-tls.lo `test -f 'src/tls.c' || echo '$(srcdir)/'`src/tls.c

src/src_libwolfssl_la-ocsp.lo: src/ocsp.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT src/src_libwolfssl_la-ocsp.lo -MD -MP -MF src/$(DEPDIR)/src_libwolfssl_la-ocsp.Tpo -c -o src/src_libwolfssl_la-ocsp.lo `test -f 'src/ocsp.c' || echo '$(srcdir)/'`src/ocsp.c
#	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libwolfssl_la-ocsp.Tpo src/$(DEPDIR)/src_libwolfssl_la-ocsp.Plo
	$(AM_V_CC) \
	source='src/ocsp.c' object='src/src_libwolfssl_la-ocsp.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o src/src_libwolfssl_la-ocsp.lo `test -f 'src/ocsp.c' || echo '$(srcdir)/'`src/ocsp.c

src/src_libwolfssl_la-crl.lo: src/crl.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT src/src_libwolfssl_la-crl.lo -MD -MP -MF src/$(DEPDIR)/src_libwolfssl_la-crl.Tpo -c -o src/src_libwolfssl_la-crl.lo `test -f 'src/crl.c' || echo '$(srcdir)/'`src/crl.c
#	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libwolfssl_la-crl.Tpo src/$(DEPDIR)/src_libwolfssl_la-crl.Plo
	$(AM_V_CC) \
	source='src/crl.c' object='src/src_libwolfssl_la-crl.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o src/src_libwolfssl_la-crl.lo `test -f 'src/crl.c' || echo '$(srcdir)/'`src/crl.c

src/src_libwolfssl_la-sniffer.lo: src/sniffer.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT src/src_libwolfssl_la-sniffer.lo -MD -MP -MF src/$(DEPDIR)/src_libwolfssl_la-sniffer.Tpo -c -o src/src_libwolfssl_la-sniffer.lo `test -f 'src/sniffer.c' || echo '$(srcdir)/'`src/sniffer.c
#	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_libwolfssl_la-sniffer.Tpo src/$(DEPDIR)/src_libwolfssl_la-sniffer.Plo
	$(AM_V_CC) \
	source='src/sniffer.c' object='src/src_libwolfssl_la-sniffer.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o src/src_libwolfssl_la-sniffer.lo `test -f 'src/sniffer.c' || echo '$(srcdir)/'`src/sniffer.c

wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.lo: wolfcrypt/src/port/cavium/cavium_nitrox.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -MT wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.lo -MD -MP -MF wolfcrypt/src/port/cavium/$(DEPDIR)/src_libwolfssl_la-cavium_nitrox.Tpo -c -o wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.lo `test -f 'wolfcrypt/src/port/cavium/cavium_nitrox.c' || echo '$(srcdir)/'`wolfcrypt/src/port/cavium/cavium_nitrox.c
#	$(AM_V_at)$(am__mv) wolfcrypt/src/port/cavium/$(DEPDIR)/src_libwolfssl_la-cavium_nitrox.Tpo wolfcrypt/src/port/cavium/$(DEPDIR)/src_libwolfssl_la-cavium_nitrox.Plo
	$(AM_V_CC) \
	source='wolfcrypt/src/port/cavium/cavium_nitrox.c' object='wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.lo' libtool=yes \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_libwolfssl_la_CPPFLAGS) $(CPPFLAGS) $(src_libwolfssl_la_CFLAGS) $(CFLAGS) -c -o wolfcrypt/src/port/cavium/src_libwolfssl_la-cavium_nitrox.lo `test -f 'wolfcrypt/src/port/cavium/cavium_nitrox.c' || echo '$(srcdir)/'`wolfcrypt/src/port/cavium/cavium_nitrox.c

tests/tests_unit_test-unit.o: tests/unit.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-unit.o -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-unit.Tpo -c -o tests/tests_unit_test-unit.o `test -f 'tests/unit.c' || echo '$(srcdir)/'`tests/unit.c
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-unit.Tpo tests/$(DEPDIR)/tests_unit_test-unit.Po
	$(AM_V_CC) \
	source='tests/unit.c' object='tests/tests_unit_test-unit.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-unit.o `test -f 'tests/unit.c' || echo '$(srcdir)/'`tests/unit.c

tests/tests_unit_test-unit.obj: tests/unit.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-unit.obj -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-unit.Tpo -c -o tests/tests_unit_test-unit.obj `if test -f 'tests/unit.c'; then $(CYGPATH_W) 'tests/unit.c'; else $(CYGPATH_W) '$(srcdir)/tests/unit.c'; fi`
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-unit.Tpo tests/$(DEPDIR)/tests_unit_test-unit.Po
	$(AM_V_CC) \
	source='tests/unit.c' object='tests/tests_unit_test-unit.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-unit.obj `if test -f 'tests/unit.c'; then $(CYGPATH_W) 'tests/unit.c'; else $(CYGPATH_W) '$(srcdir)/tests/unit.c'; fi`

tests/tests_unit_test-api.o: tests/api.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-api.o -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-api.Tpo -c -o tests/tests_unit_test-api.o `test -f 'tests/api.c' || echo '$(srcdir)/'`tests/api.c
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-api.Tpo tests/$(DEPDIR)/tests_unit_test-api.Po
	$(AM_V_CC) \
	source='tests/api.c' object='tests/tests_unit_test-api.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-api.o `test -f 'tests/api.c' || echo '$(srcdir)/'`tests/api.c

tests/tests_unit_test-api.obj: tests/api.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-api.obj -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-api.Tpo -c -o tests/tests_unit_test-api.obj `if test -f 'tests/api.c'; then $(CYGPATH_W) 'tests/api.c'; else $(CYGPATH_W) '$(srcdir)/tests/api.c'; fi`
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-api.Tpo tests/$(DEPDIR)/tests_unit_test-api.Po
	$(AM_V_CC) \
	source='tests/api.c' object='tests/tests_unit_test-api.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-api.obj `if test -f 'tests/api.c'; then $(CYGPATH_W) 'tests/api.c'; else $(CYGPATH_W) '$(srcdir)/tests/api.c'; fi`

tests/tests_unit_test-suites.o: tests/suites.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-suites.o -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-suites.Tpo -c -o tests/tests_unit_test-suites.o `test -f 'tests/suites.c' || echo '$(srcdir)/'`tests/suites.c
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-suites.Tpo tests/$(DEPDIR)/tests_unit_test-suites.Po
	$(AM_V_CC) \
	source='tests/suites.c' object='tests/tests_unit_test-suites.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-suites.o `test -f 'tests/suites.c' || echo '$(srcdir)/'`tests/suites.c

tests/tests_unit_test-suites.obj: tests/suites.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-suites.obj -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-suites.Tpo -c -o tests/tests_unit_test-suites.obj `if test -f 'tests/suites.c'; then $(CYGPATH_W) 'tests/suites.c'; else $(CYGPATH_W) '$(srcdir)/tests/suites.c'; fi`
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-suites.Tpo tests/$(DEPDIR)/tests_unit_test-suites.Po
	$(AM_V_CC) \
	source='tests/suites.c' object='tests/tests_unit_test-suites.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-suites.obj `if test -f 'tests/suites.c'; then $(CYGPATH_W) 'tests/suites.c'; else $(CYGPATH_W) '$(srcdir)/tests/suites.c'; fi`

tests/tests_unit_test-hash.o: tests/hash.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-hash.o -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-hash.Tpo -c -o tests/tests_unit_test-hash.o `test -f 'tests/hash.c' || echo '$(srcdir)/'`tests/hash.c
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-hash.Tpo tests/$(DEPDIR)/tests_unit_test-hash.Po
	$(AM_V_CC) \
	source='tests/hash.c' object='tests/tests_unit_test-hash.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-hash.o `test -f 'tests/hash.c' || echo '$(srcdir)/'`tests/hash.c

tests/tests_unit_test-hash.obj: tests/hash.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-hash.obj -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-hash.Tpo -c -o tests/tests_unit_test-hash.obj `if test -f 'tests/hash.c'; then $(CYGPATH_W) 'tests/hash.c'; else $(CYGPATH_W) '$(srcdir)/tests/hash.c'; fi`
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-hash.Tpo tests/$(DEPDIR)/tests_unit_test-hash.Po
	$(AM_V_CC) \
	source='tests/hash.c' object='tests/tests_unit_test-hash.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-hash.obj `if test -f 'tests/hash.c'; then $(CYGPATH_W) 'tests/hash.c'; else $(CYGPATH_W) '$(srcdir)/tests/hash.c'; fi`

tests/tests_unit_test-srp.o: tests/srp.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-srp.o -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-srp.Tpo -c -o tests/tests_unit_test-srp.o `test -f 'tests/srp.c' || echo '$(srcdir)/'`tests/srp.c
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-srp.Tpo tests/$(DEPDIR)/tests_unit_test-srp.Po
	$(AM_V_CC) \
	source='tests/srp.c' object='tests/tests_unit_test-srp.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-srp.o `test -f 'tests/srp.c' || echo '$(srcdir)/'`tests/srp.c

tests/tests_unit_test-srp.obj: tests/srp.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT tests/tests_unit_test-srp.obj -MD -MP -MF tests/$(DEPDIR)/tests_unit_test-srp.Tpo -c -o tests/tests_unit_test-srp.obj `if test -f 'tests/srp.c'; then $(CYGPATH_W) 'tests/srp.c'; else $(CYGPATH_W) '$(srcdir)/tests/srp.c'; fi`
#	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_unit_test-srp.Tpo tests/$(DEPDIR)/tests_unit_test-srp.Po
	$(AM_V_CC) \
	source='tests/srp.c' object='tests/tests_unit_test-srp.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o tests/tests_unit_test-srp.obj `if test -f 'tests/srp.c'; then $(CYGPATH_W) 'tests/srp.c'; else $(CYGPATH_W) '$(srcdir)/tests/srp.c'; fi`

examples/client/tests_unit_test-client.o: examples/client/client.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT examples/client/tests_unit_test-client.o -MD -MP -MF examples/client/$(DEPDIR)/tests_unit_test-client.Tpo -c -o examples/client/tests_unit_test-client.o `test -f 'examples/client/client.c' || echo '$(srcdir)/'`examples/client/client.c
#	$(AM_V_at)$(am__mv) examples/client/$(DEPDIR)/tests_unit_test-client.Tpo examples/client/$(DEPDIR)/tests_unit_test-client.Po
	$(AM_V_CC) \
	source='examples/client/client.c' object='examples/client/tests_unit_test-client.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o examples/client/tests_unit_test-client.o `test -f 'examples/client/client.c' || echo '$(srcdir)/'`examples/client/client.c

examples/client/tests_unit_test-client.obj: examples/client/client.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT examples/client/tests_unit_test-client.obj -MD -MP -MF examples/client/$(DEPDIR)/tests_unit_test-client.Tpo -c -o examples/client/tests_unit_test-client.obj `if test -f 'examples/client/client.c'; then $(CYGPATH_W) 'examples/client/client.c'; else $(CYGPATH_W) '$(srcdir)/examples/client/client.c'; fi`
#	$(AM_V_at)$(am__mv) examples/client/$(DEPDIR)/tests_unit_test-client.Tpo examples/client/$(DEPDIR)/tests_unit_test-client.Po
	$(AM_V_CC) \
	source='examples/client/client.c' object='examples/client/tests_unit_test-client.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o examples/client/tests_unit_test-client.obj `if test -f 'examples/client/client.c'; then $(CYGPATH_W) 'examples/client/client.c'; else $(CYGPATH_W) '$(srcdir)/examples/client/client.c'; fi`

examples/server/tests_unit_test-server.o: examples/server/server.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT examples/server/tests_unit_test-server.o -MD -MP -MF examples/server/$(DEPDIR)/tests_unit_test-server.Tpo -c -o examples/server/tests_unit_test-server.o `test -f 'examples/server/server.c' || echo '$(srcdir)/'`examples/server/server.c
#	$(AM_V_at)$(am__mv) examples/server/$(DEPDIR)/tests_unit_test-server.Tpo examples/server/$(DEPDIR)/tests_unit_test-server.Po
	$(AM_V_CC) \
	source='examples/server/server.c' object='examples/server/tests_unit_test-server.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o examples/server/tests_unit_test-server.o `test -f 'examples/server/server.c' || echo '$(srcdir)/'`examples/server/server.c

examples/server/tests_unit_test-server.obj: examples/server/server.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -MT examples/server/tests_unit_test-server.obj -MD -MP -MF examples/server/$(DEPDIR)/tests_unit_test-server.Tpo -c -o examples/server/tests_unit_test-server.obj `if test -f 'examples/server/server.c'; then $(CYGPATH_W) 'examples/server/server.c'; else $(CYGPATH_W) '$(srcdir)/examples/server/server.c'; fi`
#	$(AM_V_at)$(am__mv) examples/server/$(DEPDIR)/tests_unit_test-server.Tpo examples/server/$(DEPDIR)/tests_unit_test-server.Po
	$(AM_V_CC) \
	source='examples/server/server.c' object='examples/server/tests_unit_test-server.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_unit_test_CFLAGS) $(CFLAGS) -c -o examples/server/tests_unit_test-server.obj `if test -f 'examples/server/server.c'; then $(CYGPATH_W) 'examples/server/server.c'; else $(CYGPATH_W) '$(srcdir)/examples/server/server.c'; fi`

wolfcrypt/test/testsuite_testsuite_test-test.o: wolfcrypt/test/test.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT wolfcrypt/test/testsuite_testsuite_test-test.o -MD -MP -MF wolfcrypt/test/$(DEPDIR)/testsuite_testsuite_test-test.Tpo -c -o wolfcrypt/test/testsuite_testsuite_test-test.o `test -f 'wolfcrypt/test/test.c' || echo '$(srcdir)/'`wolfcrypt/test/test.c
#	$(AM_V_at)$(am__mv) wolfcrypt/test/$(DEPDIR)/testsuite_testsuite_test-test.Tpo wolfcrypt/test/$(DEPDIR)/testsuite_testsuite_test-test.Po
	$(AM_V_CC) \
	source='wolfcrypt/test/test.c' object='wolfcrypt/test/testsuite_testsuite_test-test.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o wolfcrypt/test/testsuite_testsuite_test-test.o `test -f 'wolfcrypt/test/test.c' || echo '$(srcdir)/'`wolfcrypt/test/test.c

wolfcrypt/test/testsuite_testsuite_test-test.obj: wolfcrypt/test/test.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT wolfcrypt/test/testsuite_testsuite_test-test.obj -MD -MP -MF wolfcrypt/test/$(DEPDIR)/testsuite_testsuite_test-test.Tpo -c -o wolfcrypt/test/testsuite_testsuite_test-test.obj `if test -f 'wolfcrypt/test/test.c'; then $(CYGPATH_W) 'wolfcrypt/test/test.c'; else $(CYGPATH_W) '$(srcdir)/wolfcrypt/test/test.c'; fi`
#	$(AM_V_at)$(am__mv) wolfcrypt/test/$(DEPDIR)/testsuite_testsuite_test-test.Tpo wolfcrypt/test/$(DEPDIR)/testsuite_testsuite_test-test.Po
	$(AM_V_CC) \
	source='wolfcrypt/test/test.c' object='wolfcrypt/test/testsuite_testsuite_test-test.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o wolfcrypt/test/testsuite_testsuite_test-test.obj `if test -f 'wolfcrypt/test/test.c'; then $(CYGPATH_W) 'wolfcrypt/test/test.c'; else $(CYGPATH_W) '$(srcdir)/wolfcrypt/test/test.c'; fi`

examples/client/testsuite_testsuite_test-client.o: examples/client/client.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT examples/client/testsuite_testsuite_test-client.o -MD -MP -MF examples/client/$(DEPDIR)/testsuite_testsuite_test-client.Tpo -c -o examples/client/testsuite_testsuite_test-client.o `test -f 'examples/client/client.c' || echo '$(srcdir)/'`examples/client/client.c
#	$(AM_V_at)$(am__mv) examples/client/$(DEPDIR)/testsuite_testsuite_test-client.Tpo examples/client/$(DEPDIR)/testsuite_testsuite_test-client.Po
	$(AM_V_CC) \
	source='examples/client/client.c' object='examples/client/testsuite_testsuite_test-client.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o examples/client/testsuite_testsuite_test-client.o `test -f 'examples/client/client.c' || echo '$(srcdir)/'`examples/client/client.c

examples/client/testsuite_testsuite_test-client.obj: examples/client/client.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT examples/client/testsuite_testsuite_test-client.obj -MD -MP -MF examples/client/$(DEPDIR)/testsuite_testsuite_test-client.Tpo -c -o examples/client/testsuite_testsuite_test-client.obj `if test -f 'examples/client/client.c'; then $(CYGPATH_W) 'examples/client/client.c'; else $(CYGPATH_W) '$(srcdir)/examples/client/client.c'; fi`
#	$(AM_V_at)$(am__mv) examples/client/$(DEPDIR)/testsuite_testsuite_test-client.Tpo examples/client/$(DEPDIR)/testsuite_testsuite_test-client.Po
	$(AM_V_CC) \
	source='examples/client/client.c' object='examples/client/testsuite_testsuite_test-client.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o examples/client/testsuite_testsuite_test-client.obj `if test -f 'examples/client/client.c'; then $(CYGPATH_W) 'examples/client/client.c'; else $(CYGPATH_W) '$(srcdir)/examples/client/client.c'; fi`

examples/echoclient/testsuite_testsuite_test-echoclient.o: examples/echoclient/echoclient.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT examples/echoclient/testsuite_testsuite_test-echoclient.o -MD -MP -MF examples/echoclient/$(DEPDIR)/testsuite_testsuite_test-echoclient.Tpo -c -o examples/echoclient/testsuite_testsuite_test-echoclient.o `test -f 'examples/echoclient/echoclient.c' || echo '$(srcdir)/'`examples/echoclient/echoclient.c
#	$(AM_V_at)$(am__mv) examples/echoclient/$(DEPDIR)/testsuite_testsuite_test-echoclient.Tpo examples/echoclient/$(DEPDIR)/testsuite_testsuite_test-echoclient.Po
	$(AM_V_CC) \
	source='examples/echoclient/echoclient.c' object='examples/echoclient/testsuite_testsuite_test-echoclient.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o examples/echoclient/testsuite_testsuite_test-echoclient.o `test -f 'examples/echoclient/echoclient.c' || echo '$(srcdir)/'`examples/echoclient/echoclient.c

examples/echoclient/testsuite_testsuite_test-echoclient.obj: examples/echoclient/echoclient.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT examples/echoclient/testsuite_testsuite_test-echoclient.obj -MD -MP -MF examples/echoclient/$(DEPDIR)/testsuite_testsuite_test-echoclient.Tpo -c -o examples/echoclient/testsuite_testsuite_test-echoclient.obj `if test -f 'examples/echoclient/echoclient.c'; then $(CYGPATH_W) 'examples/echoclient/echoclient.c'; else $(CYGPATH_W) '$(srcdir)/examples/echoclient/echoclient.c'; fi`
#	$(AM_V_at)$(am__mv) examples/echoclient/$(DEPDIR)/testsuite_testsuite_test-echoclient.Tpo examples/echoclient/$(DEPDIR)/testsuite_testsuite_test-echoclient.Po
	$(AM_V_CC) \
	source='examples/echoclient/echoclient.c' object='examples/echoclient/testsuite_testsuite_test-echoclient.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o examples/echoclient/testsuite_testsuite_test-echoclient.obj `if test -f 'examples/echoclient/echoclient.c'; then $(CYGPATH_W) 'examples/echoclient/echoclient.c'; else $(CYGPATH_W) '$(srcdir)/examples/echoclient/echoclient.c'; fi`

examples/echoserver/testsuite_testsuite_test-echoserver.o: examples/echoserver/echoserver.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT examples/echoserver/testsuite_testsuite_test-echoserver.o -MD -MP -MF examples/echoserver/$(DEPDIR)/testsuite_testsuite_test-echoserver.Tpo -c -o examples/echoserver/testsuite_testsuite_test-echoserver.o `test -f 'examples/echoserver/echoserver.c' || echo '$(srcdir)/'`examples/echoserver/echoserver.c
#	$(AM_V_at)$(am__mv) examples/echoserver/$(DEPDIR)/testsuite_testsuite_test-echoserver.Tpo examples/echoserver/$(DEPDIR)/testsuite_testsuite_test-echoserver.Po
	$(AM_V_CC) \
	source='examples/echoserver/echoserver.c' object='examples/echoserver/testsuite_testsuite_test-echoserver.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o examples/echoserver/testsuite_testsuite_test-echoserver.o `test -f 'examples/echoserver/echoserver.c' || echo '$(srcdir)/'`examples/echoserver/echoserver.c

examples/echoserver/testsuite_testsuite_test-echoserver.obj: examples/echoserver/echoserver.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT examples/echoserver/testsuite_testsuite_test-echoserver.obj -MD -MP -MF examples/echoserver/$(DEPDIR)/testsuite_testsuite_test-echoserver.Tpo -c -o examples/echoserver/testsuite_testsuite_test-echoserver.obj `if test -f 'examples/echoserver/echoserver.c'; then $(CYGPATH_W) 'examples/echoserver/echoserver.c'; else $(CYGPATH_W) '$(srcdir)/examples/echoserver/echoserver.c'; fi`
#	$(AM_V_at)$(am__mv) examples/echoserver/$(DEPDIR)/testsuite_testsuite_test-echoserver.Tpo examples/echoserver/$(DEPDIR)/testsuite_testsuite_test-echoserver.Po
	$(AM_V_CC) \
	source='examples/echoserver/echoserver.c' object='examples/echoserver/testsuite_testsuite_test-echoserver.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o examples/echoserver/testsuite_testsuite_test-echoserver.obj `if test -f 'examples/echoserver/echoserver.c'; then $(CYGPATH_W) 'examples/echoserver/echoserver.c'; else $(CYGPATH_W) '$(srcdir)/examples/echoserver/echoserver.c'; fi`

examples/server/testsuite_testsuite_test-server.o: examples/server/server.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT examples/server/testsuite_testsuite_test-server.o -MD -MP -MF examples/server/$(DEPDIR)/testsuite_testsuite_test-server.Tpo -c -o examples/server/testsuite_testsuite_test-server.o `test -f 'examples/server/server.c' || echo '$(srcdir)/'`examples/server/server.c
#	$(AM_V_at)$(am__mv) examples/server/$(DEPDIR)/testsuite_testsuite_test-server.Tpo examples/server/$(DEPDIR)/testsuite_testsuite_test-server.Po
	$(AM_V_CC) \
	source='examples/server/server.c' object='examples/server/testsuite_testsuite_test-server.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o examples/server/testsuite_testsuite_test-server.o `test -f 'examples/server/server.c' || echo '$(srcdir)/'`examples/server/server.c

examples/server/testsuite_testsuite_test-server.obj: examples/server/server.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT examples/server/testsuite_testsuite_test-server.obj -MD -MP -MF examples/server/$(DEPDIR)/testsuite_testsuite_test-server.Tpo -c -o examples/server/testsuite_testsuite_test-server.obj `if test -f 'examples/server/server.c'; then $(CYGPATH_W) 'examples/server/server.c'; else $(CYGPATH_W) '$(srcdir)/examples/server/server.c'; fi`
#	$(AM_V_at)$(am__mv) examples/server/$(DEPDIR)/testsuite_testsuite_test-server.Tpo examples/server/$(DEPDIR)/testsuite_testsuite_test-server.Po
	$(AM_V_CC) \
	source='examples/server/server.c' object='examples/server/testsuite_testsuite_test-server.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o examples/server/testsuite_testsuite_test-server.obj `if test -f 'examples/server/server.c'; then $(CYGPATH_W) 'examples/server/server.c'; else $(CYGPATH_W) '$(srcdir)/examples/server/server.c'; fi`

testsuite/testsuite_testsuite_test-testsuite.o: testsuite/testsuite.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT testsuite/testsuite_testsuite_test-testsuite.o -MD -MP -MF testsuite/$(DEPDIR)/testsuite_testsuite_test-testsuite.Tpo -c -o testsuite/testsuite_testsuite_test-testsuite.o `test -f 'testsuite/testsuite.c' || echo '$(srcdir)/'`testsuite/testsuite.c
#	$(AM_V_at)$(am__mv) testsuite/$(DEPDIR)/testsuite_testsuite_test-testsuite.Tpo testsuite/$(DEPDIR)/testsuite_testsuite_test-testsuite.Po
	$(AM_V_CC) \
	source='testsuite/testsuite.c' object='testsuite/testsuite_testsuite_test-testsuite.o' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o testsuite/testsuite_testsuite_test-testsuite.o `test -f 'testsuite/testsuite.c' || echo '$(srcdir)/'`testsuite/testsuite.c

testsuite/testsuite_testsuite_test-testsuite.obj: testsuite/testsuite.c
#	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -MT testsuite/testsuite_testsuite_test-testsuite.obj -MD -MP -MF testsuite/$(DEPDIR)/testsuite_testsuite_test-testsuite.Tpo -c -o testsuite/testsuite_testsuite_test-testsuite.obj `if test -f 'testsuite/testsuite.c'; then $(CYGPATH_W) 'testsuite/testsuite.c'; else $(CYGPATH_W) '$(srcdir)/testsuite/testsuite.c'; fi`
#	$(AM_V_at)$(am__mv) testsuite/$(DEPDIR)/testsuite_testsuite_test-testsuite.Tpo testsuite/$(DEPDIR)/testsuite_testsuite_test-testsuite.Po
	$(AM_V_CC) \
	source='testsuite/testsuite.c' object='testsuite/testsuite_testsuite_test-testsuite.obj' libtool=no \
	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testsuite_testsuite_test_CFLAGS) $(CFLAGS) -c -o testsuite/testsuite_testsuite_test-testsuite.obj `if test -f 'testsuite/testsuite.c'; then $(CYGPATH_W) 'testsuite/testsuite.c'; else $(CYGPATH_W) '$(srcdir)/testsuite/testsuite.c'; fi`

.s.o:
	$(AM_V_CCAS) \
	$(CCASCOMPILE) -c -o $@ $<

.s.obj:
	$(AM_V_CCAS) \
	$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.s.lo:
	$(AM_V_CCAS) \
	$(LTCCASCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf ctaocrypt/src/.libs ctaocrypt/src/_libs
	-rm -rf examples/client/.libs examples/client/_libs
	-rm -rf examples/echoclient/.libs examples/echoclient/_libs
	-rm -rf examples/echoserver/.libs examples/echoserver/_libs
	-rm -rf examples/sctp/.libs examples/sctp/_libs
	-rm -rf examples/server/.libs examples/server/_libs
	-rm -rf mcapi/.libs mcapi/_libs
	-rm -rf src/.libs src/_libs
	-rm -rf sslSniffer/sslSnifferTest/.libs sslSniffer/sslSnifferTest/_libs
	-rm -rf tests/.libs tests/_libs
	-rm -rf testsuite/.libs testsuite/_libs
	-rm -rf wolfcrypt/benchmark/.libs wolfcrypt/benchmark/_libs
	-rm -rf wolfcrypt/src/.libs wolfcrypt/src/_libs
	-rm -rf wolfcrypt/src/port/arm/.libs wolfcrypt/src/port/arm/_libs
	-rm -rf wolfcrypt/src/port/cavium/.libs wolfcrypt/src/port/cavium/_libs
	-rm -rf wolfcrypt/test/.libs wolfcrypt/test/_libs
	-rm -rf wolfcrypt/user-crypto/src/.libs wolfcrypt/user-crypto/src/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(MKDIR_P) "$(DESTDIR)$(docdir)"
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(docdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(docdir)" && rm -f $$files
install-dist_exampleDATA: $(dist_example_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(exampledir)" || $(MKDIR_P) "$(DESTDIR)$(exampledir)"
	@list='$(dist_example_DATA)'; test -n "$(exampledir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(exampledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(exampledir)" || exit $$?; \
	done

uninstall-dist_exampleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_example_DATA)'; test -n "$(exampledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(exampledir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(exampledir)" && rm -f $$files
install-ippDATA: $(ipp_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ippdir)" || $(MKDIR_P) "$(DESTDIR)$(ippdir)"
	@list='$(ipp_DATA)'; test -n "$(ippdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ippdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ippdir)" || exit $$?; \
	done

uninstall-ippDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ipp_DATA)'; test -n "$(ippdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ippdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ippdir)" && rm -f $$files
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgconfigdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgconfigdir)" && rm -f $$files
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod u+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) \
		$(HEADERS) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(exampledir)" "$(DESTDIR)$(ippdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ctaocrypt/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f ctaocrypt/src/$(am__dirstamp)
	-rm -f examples/client/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/client/$(am__dirstamp)
	-rm -f examples/echoclient/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/echoclient/$(am__dirstamp)
	-rm -f examples/echoserver/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/echoserver/$(am__dirstamp)
	-rm -f examples/sctp/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/sctp/$(am__dirstamp)
	-rm -f examples/server/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/server/$(am__dirstamp)
	-rm -f mcapi/$(DEPDIR)/$(am__dirstamp)
	-rm -f mcapi/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f sslSniffer/sslSnifferTest/$(DEPDIR)/$(am__dirstamp)
	-rm -f sslSniffer/sslSnifferTest/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-rm -f testsuite/$(DEPDIR)/$(am__dirstamp)
	-rm -f testsuite/$(am__dirstamp)
	-rm -f wolfcrypt/benchmark/$(DEPDIR)/$(am__dirstamp)
	-rm -f wolfcrypt/benchmark/$(am__dirstamp)
	-rm -f wolfcrypt/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f wolfcrypt/src/$(am__dirstamp)
	-rm -f wolfcrypt/src/port/arm/$(DEPDIR)/$(am__dirstamp)
	-rm -f wolfcrypt/src/port/arm/$(am__dirstamp)
	-rm -f wolfcrypt/src/port/cavium/$(DEPDIR)/$(am__dirstamp)
	-rm -f wolfcrypt/src/port/cavium/$(am__dirstamp)
	-rm -f wolfcrypt/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f wolfcrypt/test/$(am__dirstamp)
	-rm -f wolfcrypt/user-crypto/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f wolfcrypt/user-crypto/src/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ctaocrypt/src/$(DEPDIR) examples/client/$(DEPDIR) examples/echoclient/$(DEPDIR) examples/echoserver/$(DEPDIR) examples/sctp/$(DEPDIR) examples/server/$(DEPDIR) mcapi/$(DEPDIR) src/$(DEPDIR) sslSniffer/sslSnifferTest/$(DEPDIR) tests/$(DEPDIR) testsuite/$(DEPDIR) wolfcrypt/benchmark/$(DEPDIR) wolfcrypt/src/$(DEPDIR) wolfcrypt/src/port/arm/$(DEPDIR) wolfcrypt/src/port/cavium/$(DEPDIR) wolfcrypt/test/$(DEPDIR) wolfcrypt/user-crypto/src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_docDATA install-dist_exampleDATA \
	install-includeHEADERS install-ippDATA \
	install-nobase_includeHEADERS install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local \
	install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ctaocrypt/src/$(DEPDIR) examples/client/$(DEPDIR) examples/echoclient/$(DEPDIR) examples/echoserver/$(DEPDIR) examples/sctp/$(DEPDIR) examples/server/$(DEPDIR) mcapi/$(DEPDIR) src/$(DEPDIR) sslSniffer/sslSnifferTest/$(DEPDIR) tests/$(DEPDIR) testsuite/$(DEPDIR) wolfcrypt/benchmark/$(DEPDIR) wolfcrypt/src/$(DEPDIR) wolfcrypt/src/port/arm/$(DEPDIR) wolfcrypt/src/port/cavium/$(DEPDIR) wolfcrypt/test/$(DEPDIR) wolfcrypt/user-crypto/src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_docDATA \
	uninstall-dist_exampleDATA uninstall-includeHEADERS \
	uninstall-ippDATA uninstall-libLTLIBRARIES uninstall-local \
	uninstall-nobase_includeHEADERS uninstall-pkgconfigDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
	clean clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS ctags dist dist-all dist-bzip2 dist-gzip \
	dist-lzma dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_docDATA install-dist_exampleDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-local install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-ippDATA install-libLTLIBRARIES install-man \
	install-nobase_includeHEADERS install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic maintainer-clean-local mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_docDATA \
	uninstall-dist_exampleDATA uninstall-includeHEADERS \
	uninstall-ippDATA uninstall-libLTLIBRARIES uninstall-local \
	uninstall-nobase_includeHEADERS uninstall-pkgconfigDATA


#includes additional rules from aminclude.am
include $(top_builddir)/aminclude.am
#IPP_links:
#	@$(IPPLINK)

rpm-build: rpm/spec dist
	@rm -f *.rpm
	@rm -f ~/rpmbuild/RPMS/x86_64/$(PACKAGE)-$(VERSION)*.rpm
	@rm -f ~/rpmbuild/SRPMS/$(PACKAGE)-$(VERSION)*.rpm
	@mkdir -p ~/rpmbuild/BUILD/
	@mkdir -p ~/rpmbuild/RPMS/i386/
	@mkdir -p ~/rpmbuild/RPMS/i686/
	@mkdir -p ~/rpmbuild/RPMS/noarch/
	@mkdir -p ~/rpmbuild/RPMS/x86_64/
	@mkdir -p ~/rpmbuild/SOURCES/
	@mkdir -p ~/rpmbuild/SPECS/
	@mkdir -p ~/rpmbuild/SRPMS/
	@cp $(PACKAGE)-$(VERSION).tar.gz ~/rpmbuild/SOURCES/
	@rpmbuild -ba --clean rpm/spec
	@cp ~/rpmbuild/RPMS/x86_64/$(PACKAGE)-$(VERSION)*.rpm .
	@cp ~/rpmbuild/RPMS/x86_64/$(PACKAGE)-devel-$(VERSION)*.rpm .
	@cp ~/rpmbuild/RPMS/x86_64/$(PACKAGE)-debuginfo-$(VERSION)*.rpm .
	@cp ~/rpmbuild/SRPMS/$(PACKAGE)-$(VERSION)*.rpm .

rpm-sign: rpm-build
	@rpm --addsign *.rpm
	@rpm --checksig *.rpm

clean-rpm:
	@rm -f *.tar.gz
	@rm -f *.src.rpm
	@rm -f *.rpm

rpm: rpm-build

release: rpm-sign

auto-rpmbuild:
	@auto-br-rpmbuild -ba rpm/spec
scripts/crl-revoked.log: scripts/resume.log
#scripts/ocsp-stapling.log: scripts/ocsp.log

##scripts/ocsp-stapling2.log: scripts/ocsp-stapling.log
#scripts/ocsp-stapling2.log: scripts/ocsp.log
#scripts/pkcallbacks.log: scripts/resume.log

test: check
tests/unit.log: testsuite/testsuite.log

maintainer-clean-local:
	-rm Makefile.in
	-rm aclocal.m4
	-rm build-aux/compile
	-rm build-aux/config.guess
	-rm build-aux/config.sub
	-rm build-aux/depcomp
	-rm build-aux/install-sh
	-rm build-aux/ltmain.sh
	-rm build-aux/missing
	-rm cyassl-config
	-rmdir build-aux
	-rm configure
	-rm config.log
	-rm config.status
	-rm config.in
	-rm m4/libtool.m4
	-rm m4/ltoptions.m4
	-rm m4/ltsugar.m4
	-rm m4/ltversion.m4
	-rm m4/lt~obsolete.m4
	-rm support/wolfssl.pc
	find . -type f -name '*~' -exec rm -f '{}' \;
	-rm -f wolfssl-*.tar.gz
	-rm -f wolfssl-*.rpm

# !!!! first line of rule has to start with a hard (real) tab, not spaces
egs:
	$(MAKE) examples/client/client; \
	$(MAKE) examples/echoclient/echoclient;\
	$(MAKE) examples/server/server; \
	$(MAKE) examples/echoserver/echoserver;

wc_egs:
	$(MAKE) wolfcrypt/test/testwolfcrypt; \
	$(MAKE) wolfcrypt/benchmark/benchmark;

install-exec-local:	install-generic-config

install-generic-config:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	$(INSTALL_SCRIPT) wolfssl-config $(DESTDIR)$(bindir)

uninstall-local:
	-rm -f $(DESTDIR)$(bindir)/wolfssl-config

merge-clean:
	@find ./ | $(GREP) \.gcda | xargs rm -f
	@find ./ | $(GREP) \.gcno | xargs rm -f
	@find ./ | $(GREP) \.gz | xargs rm -f
	@find ./ | $(GREP) \.orig | xargs rm -f
	@find ./ | $(GREP) \.rej | xargs rm -f
	@find ./ | $(GREP) \.rpm | xargs rm -f
	@find ./ | $(GREP) \.THIS | xargs rm -f
	@find ./ | $(GREP) \.OTHER | xargs rm -f
	@find ./ | $(GREP) \.BASE | xargs rm -f
	@find ./ | $(GREP) \~$$ | xargs rm -f

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
